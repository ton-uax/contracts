.macro constructor
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
;; constructor protection
GETGLOB 6
THROWIF 51
PUSHINT 1
SETGLOB 6
;; end constructor protection
; Decode input parameters
ENDS
; modifier accept
ACCEPT
; constructor Root
; expValue
; end expValue
;; get member sender
GETGLOB 9
; colValue
; end colValue
;; Remote call IRepo.onDeploy
;; push identifier _repo
DUP
SETGLOB 25
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x411e1a30000000000000000000000000000061826477_
STSLICER
;; id
PUSHINT 30
STUR 16
ENDC
PUSHINT 0
SENDRAWMSG
; end constructor Root
; end modifier accept
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	_spawn_internal
.type	_spawn_internal, @function
CALL $_spawn_internal_macro$

.macro _spawn_internal_macro
;; param: n
; function _spawn
;; get member si
;; index
;; push identifier n
DUP
;; push identifier _images
GETGLOB 22
PUSHINT 8
DICTUGET
PUSHCONT {
	NEWC
	PUSHREF {
	}
	STREFR
	PUSHINT 8
	STZEROES
	PUSHREF {
	}
	STREFR
	ENDC
	CTOS
}
IFNOT
PUSHINT 8
PUSHINT 1
SSKIPFIRST
PLDREF
GETGLOB 2
CALLREF {
	CALL $insert_pubkey_macro$
}
;; decl: c
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; decl: addr
PUSHINT 1000000000
;; uint64
;; *
;; get member initialBalance
;; index
;; push identifier n
PUSH S3
;; push identifier _images
GETGLOB 22
PUSHINT 8
DICTUGET
PUSHCONT {
	NEWC
	PUSHREF {
	}
	STREFR
	PUSHINT 8
	STZEROES
	PUSHREF {
	}
	STREFR
	ENDC
	CTOS
}
IFNOT
LDREF
NIP
PLDU 8
MUL
UFITS 64
;; decl: val
;; if
;; push identifier n
PUSH S3
EQINT 1
PUSHCONT {
	;; push identifier c
	PUSH2 S2, S2
	HASHCU
	NEWC
	STSLICECONST x801_
	STU 256
	ENDC
	CTOS
	;; push identifier val
	PUSH2 S2, S0
	NEWC
	STSLICECONST x62_
	STSLICE
	SWAP
	STGRAMS
	PUSHSLICE x000000000000000000000000007_
	STSLICER
	PUSH S2
	STREFR
	STSLICECONST x345aaf9fc_
	ENDC
	PUSHINT 0
	SENDRAWMSG
	NIP
	; expValue
	; end expValue
	; colValue
	POP S2
	; end colValue
}
PUSHCONT {
	;; if
	;; push identifier n
	PUSH S3
	EQINT 2
	PUSHCONT {
		;; push identifier c
		PUSH2 S2, S2
		HASHCU
		NEWC
		STSLICECONST x801_
		STU 256
		ENDC
		CTOS
		;; push identifier val
		PUSH2 S2, S0
		NEWC
		STSLICECONST x62_
		STSLICE
		SWAP
		STGRAMS
		PUSHSLICE x000000000000000000000000007_
		STSLICER
		PUSH S2
		STREFR
		STSLICECONST x345aaf9fc_
		ENDC
		PUSHINT 0
		SENDRAWMSG
		NIP
		; expValue
		; end expValue
		; colValue
		POP S2
		; end colValue
	}
	PUSHCONT {
		;; if
		;; push identifier n
		PUSH S3
		EQINT 4
		PUSHCONT {
			;; push identifier c
			PUSH2 S2, S2
			HASHCU
			NEWC
			STSLICECONST x801_
			STU 256
			ENDC
			CTOS
			;; push identifier val
			PUSH2 S2, S0
			NEWC
			STSLICECONST x62_
			STSLICE
			SWAP
			STGRAMS
			PUSHSLICE x000000000000000000000000007_
			STSLICER
			PUSH S2
			STREFR
			STSLICECONST x345aaf9fc_
			ENDC
			PUSHINT 0
			SENDRAWMSG
			NIP
			; expValue
			; end expValue
			; colValue
			POP S2
			; end colValue
		}
		IF
		;; end if
	}
	IFELSE
	;; end if
}
IFELSE
;; end if
;; return
;; push identifier addr
PUSH S1
BLKDROP2 3, 1
; end function _spawn
NIP

.macro deploySystem
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
; function deploySystem
PUSHINT 1
CALLREF {
	CALL $_spawn_internal_macro$
}
;; decl: console
PUSHINT 2
CALLREF {
	CALL $_spawn_internal_macro$
}
;; decl: eventLog
MYADDR
;; decl: root
PUSHINT 4
CALLREF {
	CALL $_spawn_internal_macro$
}
;; decl: medium
;; push identifier DEFAULT_LOG_LEVEL
;; push identifier LOG_ALL
PUSHINT 1
;; |
PUSHINT 2
OR
;; |
PUSHINT 4
OR
;; |
PUSHINT 8
OR
;; |
PUSHINT 16
OR
;; decl: logLevel
; expValue
;; fetch _deployed
PUSHINT 1
GETGLOB 23
; end expValue
;; push identifier console
PUSH S6
; colValue
ROTREV
PUSHINT 8
DICTUSET
; end colValue
; expValue
;; fetch _deployed
DUP
SETGLOB 23
PUSHINT 2
SWAP
; end expValue
;; push identifier eventLog
PUSH S5
; colValue
ROTREV
PUSHINT 8
DICTUSET
; end colValue
; expValue
;; fetch _deployed
DUP
SETGLOB 23
PUSHINT 3
SWAP
; end expValue
;; push identifier root
PUSH S4
; colValue
ROTREV
PUSHINT 8
DICTUSET
; end colValue
; expValue
;; fetch _deployed
DUP
SETGLOB 23
PUSHINT 4
SWAP
; end expValue
;; push identifier medium
PUSH S3
; colValue
ROTREV
PUSHINT 8
DICTUSET
SETGLOB 23
; end colValue
;; push identifier console
;; push identifier eventLog
;; push identifier root
;; push identifier medium
;; push identifier logLevel
BLKPUSH 5, 4
CALLREF {
	CALL $_setEnv_internal_macro$
}
;; Remote call Base.initMember
;; push identifier console
PUSH S4
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x402625a00000000000000000000000000003_
STSLICER
NEWC
STSLICECONST x258a5d6f
;; id
PUSHINT 10
STUR 16
;; console
;; push identifier console
PUSH S6
STSLICER
;; eventLog
;; push identifier eventLog
PUSH S5
STSLICER
;; root
;; push identifier root
PUSH S4
STSLICER
NEWC
;; medium
;; push identifier medium
PUSH S4
STSLICER
;; logLevel
;; push identifier logLevel
PUSH S3
STUR 16
STBREFR
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
;; Remote call Base.initMember
;; push identifier eventLog
PUSH S3
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x402625a00000000000000000000000000003_
STSLICER
NEWC
STSLICECONST x258a5d6f
;; id
PUSHINT 20
STUR 16
;; console
;; push identifier console
PUSH S6
STSLICER
;; eventLog
;; push identifier eventLog
PUSH S5
STSLICER
;; root
;; push identifier root
PUSH S4
STSLICER
NEWC
;; medium
;; push identifier medium
PUSH S4
STSLICER
;; logLevel
;; push identifier logLevel
PUSH S3
STUR 16
STBREFR
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
;; Remote call Base.initMember
;; push identifier medium
PUSH S1
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x402625a00000000000000000000000000003_
STSLICER
NEWC
STSLICECONST x258a5d6f
;; id
PUSHINT 40
STUR 16
;; console
;; push identifier console
PUSH S6
STSLICER
;; eventLog
;; push identifier eventLog
PUSH S5
STSLICER
;; root
;; push identifier root
PUSH S4
STSLICER
NEWC
;; medium
;; push identifier medium
PUSH S4
STSLICER
;; logLevel
;; push identifier logLevel
PUSH S3
STUR 16
STBREFR
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
BLKDROP 5
; end function deploySystem
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro deployUser
DROP
; Decode input parameters
ENDS
; function deployUser
;; Remote call Root.deployOwners
;; push identifier this
; call function of this
MYADDR
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x411e1a3000000000000000000000000000008acb95c5_
STSLICER
ENDC
PUSHINT 0
SENDRAWMSG
; end function deployUser
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro onDeploy
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode id
LDU 16
ENDS
;; param: id
; function onDeploy
;; if
;; push identifier id
DUP
EQINT 10
PUSHCONT {
	;; get member sender
	GETGLOB 9
	;; decl: from
	; expValue
	;; fetch _deployed
	PUSHINT 1
	GETGLOB 23
	; end expValue
	;; push identifier from
	PUSH S2
	; colValue
	ROTREV
	PUSHINT 8
	DICTUSET
	SETGLOB 23
	; end colValue
	DROP
}
IF
;; end if
; end function onDeploy
DROP
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro updateImage
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode index
LDU 8
; Decode image
;; decode struct CTImage image
;; decode CTImage.name
LDREF
;; decode CTImage.initialBalance
LDU 8
;; decode CTImage.si
;; decode TvmCell
LDREF
;; build struct CTImage ss:5
BLKSWAP 3, 1
TUPLE 3
SWAP
ENDS
;; param: index
;; param: image
; modifier accept
ACCEPT
; function updateImage
; expValue
;; fetch _images
;; push identifier index
PUSH S1
GETGLOB 22
; end expValue
;; push identifier image
PUSH S2
; colValue
UNTUPLE 3
XCHG s2
NEWC
STREF
STU 8
STREF
ROTREV
PUSHINT 8
DICTUSETB
SETGLOB 22
; end colValue
; end function updateImage
; end modifier accept
DROP2
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	_logDeployEvent_internal
.type	_logDeployEvent_internal, @function
CALL $_logDeployEvent_internal_macro$

.macro _logDeployEvent_internal_macro
;; param: id
;; param: estate
; function _logDeployEvent
;; if
;; push identifier _logLevel
GETGLOB 16
;; &
PUSHINT 8
AND
GTINT 0
PUSHCONT {
	;; Remote call IEventLog.logDeploy
	;; push identifier _eventLog
	GETGLOB 13
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHSLICE x4017d784000000000000000000000000000006b47acd_
	STSLICER
	;; id
	;; push identifier id
	PUSH S2
	STUR 16
	;; s
	;; push identifier estate
	PUSH S1
	STUR 8
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
;; end if
; end function _logDeployEvent
DROP2

.globl	_deployTokenWallet_internal
.type	_deployTokenWallet_internal, @function
CALL $_deployTokenWallet_internal_macro$

.macro _deployTokenWallet_internal_macro
;; param: key
;; ret param: id
PUSHINT 0
;; ret param: addr
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
; function _deployTokenWallet
;; get member si
;; index
PUSHINT 7
;; push identifier _images
GETGLOB 22
PUSHINT 8
DICTUGET
PUSHCONT {
	NEWC
	PUSHREF {
	}
	STREFR
	PUSHINT 8
	STZEROES
	PUSHREF {
	}
	STREFR
	ENDC
	CTOS
}
IFNOT
PUSHINT 8
PUSHINT 1
SSKIPFIRST
PLDREF
;; push identifier key
PUSH S3
CALLREF {
	CALL $insert_pubkey_macro$
}
;; decl: signed
; expValue
; end expValue
;; push identifier _walletCounter
GETGLOB 29
; colValue
POP S3
; end colValue
;; push identifier signed
DUP
HASHCU
NEWC
STSLICECONST x801_
STU 256
; expValue
; end expValue
; colValue
ENDC
CTOS
POP S2
; end colValue
;; if
;; map.exists
;; push identifier addr
PUSH S1
;; push identifier _roster
GETGLOB 26
PUSHINT 267
DICTGET
DUP
PUSHCONT {
	NIP
}
IF
PUSHCONT {
	;; get member id
	;; index
	;; push identifier addr
	PUSH S1
	;; push identifier _roster
	GETGLOB 26
	PUSHINT 267
	DICTGET
	PUSHCONT {
		NEWC
		PUSHINT 400
		STZEROES
		ENDC
		CTOS
	}
	IFNOT
	PLDU 16
	PUSHINT 401
	CALLREF {
		CALL $_error_internal_macro$
	}
}
PUSHCONT {
	PUSHINT 1000000000
	;; uint64
	;; *
	;; get member initialBalance
	;; index
	PUSHINT 7
	;; push identifier _images
	GETGLOB 22
	PUSHINT 8
	DICTUGET
	PUSHCONT {
		NEWC
		PUSHREF {
		}
		STREFR
		PUSHINT 8
		STZEROES
		PUSHREF {
		}
		STREFR
		ENDC
		CTOS
	}
	IFNOT
	LDREF
	NIP
	PLDU 8
	MUL
	UFITS 64
	;; decl: val
	;; push identifier signed
	PUSH2 S1, S1
	HASHCU
	NEWC
	STSLICECONST x801_
	STU 256
	ENDC
	CTOS
	;; push identifier val
	PUSH2 S2, S0
	NEWC
	STSLICECONST x62_
	STSLICE
	SWAP
	STGRAMS
	PUSHSLICE x000000000000000000000000007_
	STSLICER
	PUSH S2
	STREFR
	STSLICECONST x3ef2a897c_
	;; id
	;; push identifier id
	PUSH S6
	STUR 16
	ENDC
	PUSHINT 0
	SENDRAWMSG
	NIP
	; expValue
	; end expValue
	; colValue
	POP S3
	; end colValue
	;; push identifier id
	;; push identifier val
	;; push identifier key
	PUSH3 S3, S0, S4
	;; push identifier now
	NOW
	;; uint32
	;; push identifier now
	NOW
	;; uint32
	TUPLE 5
	; expValue
	;; fetch _roster
	;; push identifier addr
	PUSH S3
	GETGLOB 26
	; end expValue
	ROT
	; colValue
	UNTUPLE 5
	REVERSE 5, 0
	NEWC
	STU 16
	STU 64
	STU 256
	STU 32
	STU 32
	ROTREV
	PUSHINT 267
	DICTSETB
	SETGLOB 26
	; end colValue
	;; push identifier id
	PUSH S3
	;; get member Requested
	PUSHINT 1
	CALLREF {
		CALL $_logDeployEvent_internal_macro$
	}
	;; ++
	; expValue
	;; fetch _walletCounter
	; end expValue
	; colValue
	; end colValue
	DROP
	GETGLOB 29
	INC
	UFITS 16
	SETGLOB 29
}
IFELSE
;; end if
DROP
; end function _deployTokenWallet
BLKDROP2 1, 2

.macro deployOwners
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
; function deployOwners
;; push identifier _ownerKeys
PUSHINT 33
GETGLOBVAR
INDEX 1
PUSHINT 0
NULL
;; decl: key
PUSHCONT {
	PUSH2 S1, S2
	PUSHINT 32
	DICTUGET
	NULLSWAPIFNOT
	PUSHCONT {
		PLDU 256
	}
	IF
	DUP
	POP S2
	ISNULL
	NOT
}
PUSHCONT {
	;; push identifier _ownerCounter
	GETGLOB 28
	;; decl: ownerId
	;; get member si
	;; index
	PUSHINT 6
	;; push identifier _images
	GETGLOB 22
	PUSHINT 8
	DICTUGET
	PUSHCONT {
		NEWC
		PUSHREF {
		}
		STREFR
		PUSHINT 8
		STZEROES
		PUSHREF {
		}
		STREFR
		ENDC
		CTOS
	}
	IFNOT
	PUSHINT 8
	PUSHINT 1
	SSKIPFIRST
	PLDREF
	;; push identifier key
	PUSH S2
	CALLREF {
		CALL $insert_pubkey_macro$
	}
	;; decl: signed
	;; push identifier signed
	DUP
	HASHCU
	NEWC
	STSLICECONST x801_
	STU 256
	ENDC
	CTOS
	;; decl: ownerAddr
	;; if
	;; map.exists
	;; push identifier ownerAddr
	DUP
	;; push identifier _roster
	GETGLOB 26
	PUSHINT 267
	DICTGET
	DUP
	PUSHCONT {
		NIP
	}
	IF
	PUSHCONT {
		;; get member id
		;; index
		;; push identifier ownerAddr
		DUP
		;; push identifier _roster
		GETGLOB 26
		PUSHINT 267
		DICTGET
		PUSHCONT {
			NEWC
			PUSHINT 400
			STZEROES
			ENDC
			CTOS
		}
		IFNOT
		PLDU 16
		PUSHINT 400
		CALLREF {
			CALL $_error_internal_macro$
		}
	}
	IF
	;; end if
	PUSHINT 1000000000
	;; uint64
	;; *
	;; get member initialBalance
	;; index
	PUSHINT 6
	;; push identifier _images
	GETGLOB 22
	PUSHINT 8
	DICTUGET
	PUSHCONT {
		NEWC
		PUSHREF {
		}
		STREFR
		PUSHINT 8
		STZEROES
		PUSHREF {
		}
		STREFR
		ENDC
		CTOS
	}
	IFNOT
	LDREF
	NIP
	PLDU 8
	MUL
	UFITS 64
	;; decl: val
	;; push identifier signed
	PUSH2 S2, S2
	HASHCU
	NEWC
	STSLICECONST x801_
	STU 256
	ENDC
	CTOS
	;; push identifier val
	PUSH2 S2, S0
	NEWC
	STSLICECONST x62_
	STSLICE
	SWAP
	STGRAMS
	PUSHSLICE x000000000000000000000000007_
	STSLICER
	PUSH S2
	STREFR
	STSLICECONST x3c3683914_
	;; id
	;; push identifier ownerId
	PUSH S6
	STUR 16
	;; key
	;; push identifier key
	PUSH S7
	STUR 256
	ENDC
	PUSHINT 0
	SENDRAWMSG
	NIP
	; expValue
	; end expValue
	; colValue
	POP S2
	; end colValue
	;; push identifier ownerId
	;; push identifier val
	;; push identifier key
	PUSH3 S3, S0, S4
	;; push identifier now
	NOW
	;; uint32
	;; push identifier now
	NOW
	;; uint32
	TUPLE 5
	; expValue
	;; fetch _roster
	;; push identifier ownerAddr
	PUSH S2
	GETGLOB 26
	; end expValue
	ROT
	; colValue
	UNTUPLE 5
	REVERSE 5, 0
	NEWC
	STU 16
	STU 64
	STU 256
	STU 32
	STU 32
	ROTREV
	PUSHINT 267
	DICTSETB
	SETGLOB 26
	; end colValue
	;; push identifier key
	PUSH S4
	CALLREF {
		CALL $_deployTokenWallet_internal_macro$
	}
	;; decl: walletId
	;; decl: walletAddr
	;; push identifier ownerId
	;; push identifier walletId
	;; push identifier ownerAddr
	PUSH3 S5, S1, S3
	;; push identifier walletAddr
	PUSH S3
	;; push identifier now
	NOW
	;; uint32
	TUPLE 5
	; expValue
	;; fetch _owners
	;; push identifier _ownerIndex
	GETGLOB 27
	GETGLOB 24
	; end expValue
	ROT
	; colValue
	UNTUPLE 5
	REVERSE 5, 0
	NEWC
	STU 16
	STU 16
	STSLICE
	STSLICE
	STU 32
	ROTREV
	PUSHINT 8
	DICTUSETB
	SETGLOB 24
	; end colValue
	;; Remote call Medium.registerOwner
	;; push identifier _medium
	GETGLOB 15
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHSLICE x402625a00000000000000000000000000003_
	STSLICER
	NEWC
	STSLICECONST x53404b1f
	;; ownerId
	;; push identifier _ownerIndex
	GETGLOB 27
	STUR 8
	;; id
	;; push identifier ownerId
	PUSH S7
	STUR 16
	;; a
	;; push identifier ownerAddr
	PUSH S5
	STSLICER
	;; tid
	;; push identifier walletId
	PUSH S3
	STUR 16
	;; ta
	;; push identifier walletAddr
	PUSH S2
	STSLICER
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
	;; Remote call OwnerWallet.updateTokenWallet
	;; push identifier ownerAddr
	PUSH S3
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHSLICE x402625a00000000000000000000000000000f13526ed_
	STSLICER
	;; id
	;; push identifier walletId
	PUSH S2
	STUR 16
	;; addr
	;; push identifier walletAddr
	PUSH S1
	STSLICER
	ENDC
	PUSHINT 0
	SENDRAWMSG
	;; push identifier ownerId
	PUSH S5
	;; get member Requested
	PUSHINT 1
	CALLREF {
		CALL $_logDeployEvent_internal_macro$
	}
	;; ++
	; expValue
	;; fetch _ownerIndex
	; end expValue
	; colValue
	; end colValue
	;; ++
	; expValue
	;; fetch _ownerCounter
	; end expValue
	; colValue
	; end colValue
	BLKDROP 6
	GETGLOB 27
	INC
	UFITS 8
	SETGLOB 27
	GETGLOB 28
	INC
	UFITS 16
	SETGLOB 28
	PUSH S1
	INC
	POP S2
}
WHILE
BLKDROP 3
; end for
; end function deployOwners
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro deployTokenWallets
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode n
LDU 16
ENDS
;; param: n
; modifier adm
;; if
;; get member sender
GETGLOB 9
;; push identifier _console
GETGLOB 12
SDEQ
PUSHCONT {
	;; index
	;; get member sender
	GETGLOB 9
	;; push identifier _clients
	GETGLOB 19
	PUSHINT 267
	DICTGET
	PUSHCONT {
		PLDU 16
	}
	PUSHCONT {
		PUSHINT 0
	}
	IFELSE
	PUSHINT 117
	CALLREF {
		CALL $_error_internal_macro$
	}
}
IFNOT
;; end if
ACCEPT
; function deployTokenWallets
;; push identifier _walletCounter
GETGLOB 29
;; decl: counter
; for
;; push identifier counter
DUP
;; decl: i
PUSHCONT {
	;; push identifier i
	;; <
	;; push identifier counter
	;; +
	;; push identifier n
	PUSH3 S0, S1, S2
	ADD
	UFITS 16
	LESS
}
PUSHCONT {
	;; push identifier i
	DUP
	;; uint256
	CALLREF {
		CALL $_deployTokenWallet_internal_macro$
	}
	DROP2
	;; ++
	; expValue
	; end expValue
	INC
	UFITS 16
	; colValue
	; end colValue
}
WHILE
; end for
; end function deployTokenWallets
; end modifier adm
BLKDROP 3
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro deployTokenWalletsWithKeys
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode keys
LDU 32
LDDICT
ROTREV
PAIR
SWAP
ENDS
;; param: keys
;; ret param: ids
PUSHINT 0
NEWDICT
PAIR
;; ret param: addrs
PUSHINT 0
NEWDICT
PAIR
; modifier accept
ACCEPT
; function deployTokenWalletsWithKeys
;; push identifier keys
PUSH S2
INDEX 1
PUSHINT 0
NULL
;; decl: key
PUSHCONT {
	PUSH2 S1, S2
	PUSHINT 32
	DICTUGET
	NULLSWAPIFNOT
	PUSHCONT {
		PLDU 256
	}
	IF
	DUP
	POP S2
	ISNULL
	NOT
}
PUSHCONT {
	;; push identifier key
	DUP
	CALLREF {
		CALL $_deployTokenWallet_internal_macro$
	}
	;; decl: id
	;; decl: addr
	; expValue
	; end expValue
	;; push identifier id
	PUSH2 S6, S1
	;; array.push(..)
	NEWC
	STU 16
	SWAP
	UNPAIR
	PUSH S1
	INC
	XCHG s3
	ROTREV
	PUSHINT 32
	DICTUSETB
	PAIR
	; colValue
	POP S7
	; end colValue
	; expValue
	; end expValue
	;; push identifier addr
	;; array.push(..)
	PUSH2 S0, S5
	UNPAIR
	PUSH S1
	INC
	XCHG s3
	ROTREV
	PUSHINT 32
	DICTUSET
	PAIR
	; colValue
	POP S6
	; end colValue
	DROP2
	PUSH S1
	INC
	POP S2
}
WHILE
BLKDROP 3
; end for
; end function deployTokenWalletsWithKeys
; end modifier accept
BLKDROP2 1, 2
;; emitting 2 value(s)
PUSH S2
EQINT -1
PUSHCONT {
	PUSH S4
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHSLICE x0000000000000000000000002c37f05e2_
	STSLICER
	PUSH S2
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	PUSH S1
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
DROP2
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro onTokenWalletDeploy
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode id
LDU 16
; Decode k
LDU 256
; Decode balance
LDU 64
ENDS
;; param: id
;; param: k
;; param: balance
; function onTokenWalletDeploy
;; get member sender
GETGLOB 9
;; decl: from
;; index
;; push identifier from
DUP
;; push identifier _roster
GETGLOB 26
PUSHINT 267
DICTGET
PUSHCONT {
	LDU 16
	LDU 64
	LDU 256
	LDU 32
	PLDU 32
	TUPLE 5
}
PUSHCONT {
	PUSHINT 0
	BLKPUSH 4, 0
	TUPLE 5
}
IFELSE
;; decl: wi
;; if
;; get member id
;; push identifier wi
DUP
INDEX 0
;; !=
;; push identifier id
PUSH S5
NEQ
PUSHCONT {
	;; push identifier id
	PUSH S4
	PUSHINT 211
	CALLREF {
		CALL $_error_internal_macro$
	}
}
PUSHCONT {
	;; if
	;; get member key
	;; push identifier wi
	DUP
	INDEX 2
	;; !=
	;; push identifier k
	PUSH S4
	NEQ
	PUSHCONT {
		;; push identifier id
		PUSH S4
		PUSHINT 212
		CALLREF {
			CALL $_error_internal_macro$
		}
	}
	PUSHCONT {
		;; if
		;; get member createdAt
		;; push identifier wi
		DUP
		INDEX 3
		;; >
		;; push identifier now
		NOW
		;; uint32
		GREATER
		PUSHCONT {
			;; push identifier id
			PUSH S4
			PUSHINT 213
			CALLREF {
				CALL $_error_internal_macro$
			}
		}
		IF
		;; end if
	}
	IFELSE
	;; end if
}
IFELSE
;; end if
;; push identifier id
PUSH S4
;; get member Confirmed
PUSHINT 4
CALLREF {
	CALL $_logDeployEvent_internal_macro$
}
;; Remote call Base.initMember
;; push identifier from
PUSH S1
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x405f5e100000000000000000000000000003_
STSLICER
NEWC
STSLICECONST x258a5d6f
;; id
;; push identifier id
PUSH S6
STUR 16
;; console
;; push identifier _console
GETGLOB 12
STSLICER
;; eventLog
;; push identifier _eventLog
GETGLOB 13
STSLICER
;; root
;; push identifier _root
GETGLOB 14
STSLICER
;; medium
;; push identifier _medium
GETGLOB 15
NEWC
STSLICE 
;; logLevel
;; push identifier _logLevel
GETGLOB 16
STUR 16
STBREFR
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
;; if
;; get member id
;; push identifier wi
DUP
INDEX 0
;; >=
PUSHINT 10000
GEQ
PUSHCONT {
	;; Remote call IMedium.registerTokenWallet
	;; push identifier _medium
	GETGLOB 15
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHSLICE x405f5e10000000000000000000000000000079d90823_
	STSLICER
	;; id
	;; push identifier id
	PUSH S5
	STUR 16
	;; a
	;; push identifier from
	PUSH S2
	STSLICER
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
;; end if
; expValue
;; fetch _roster
;; push identifier from
PUSH S1
GETGLOB 26
DUP2
PUSHINT 267
DICTGET
PUSHCONT {
	NEWC
	PUSHINT 400
	STZEROES
	ENDC
	CTOS
}
IFNOT
LDSLICE 16
LDSLICE 64
NIP
; end expValue
;; push identifier balance
PUSH S6
; colValue
ROT
NEWC
STSLICE
STU 64
STSLICE
ROTREV
PUSHINT 267
DICTSETB
SETGLOB 26
; end colValue
;; push identifier now
NOW
;; uint32
; expValue
;; fetch _roster
;; push identifier from
PUSH S2
GETGLOB 26
DUP2
PUSHINT 267
DICTGET
PUSHCONT {
	NEWC
	PUSHINT 400
	STZEROES
	ENDC
	CTOS
}
IFNOT
PUSHINT 368
LDSLICEX
DROP
; end expValue
BLKSWAP 1, 3
; colValue
SWAP
NEWC
STSLICE
STU 32
ROTREV
PUSHINT 267
DICTSETB
SETGLOB 26
; end colValue
; end function onTokenWalletDeploy
BLKDROP 5
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro updateTonBalance
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode id
LDU 16
; Decode tonBalance
LDU 64
ENDS
;; param: id
;; param: tonBalance
; function updateTonBalance
;; get member sender
GETGLOB 9
;; decl: from
;; push identifier now
NOW
;; uint32
;; -
;; get member updatedAt
;; index
;; push identifier from
PUSH S1
;; push identifier _roster
GETGLOB 26
PUSHINT 267
DICTGET
PUSHCONT {
	NEWC
	PUSHINT 400
	STZEROES
	ENDC
	CTOS
}
IFNOT
PUSHINT 368
SDSKIPFIRST
PLDU 32
SUB
UFITS 32
;; decl: delta
;; if
;; push identifier delta
DUP
;; <
;; push identifier _updateTimeout
PUSHINT 32
GETGLOBVAR
LESS
PUSHCONT {
	;; push identifier id
	PUSH S3
	PUSHINT 402
	CALLREF {
		CALL $_error_internal_macro$
	}
}
PUSHCONT {
	;; if
	;; push identifier tonBalance
	PUSH S2
	;; <
	;; push identifier _warnBalance
	GETGLOB 18
	LESS
	PUSHCONT {
		;; transfer()
		;; push identifier _refillValue
		GETGLOB 31
		;; get member sender
		GETGLOB 9
		NEWC
		STSLICECONST x42_
		STSLICE
		SWAP
		STGRAMS
		PUSHINT 107
		STZEROES
		ENDC
		PUSHINT 1
		SENDRAWMSG
	}
	IF
	;; end if
	; expValue
	;; fetch _roster
	;; push identifier from
	PUSH S1
	GETGLOB 26
	DUP2
	PUSHINT 267
	DICTGET
	PUSHCONT {
		NEWC
		PUSHINT 400
		STZEROES
		ENDC
		CTOS
	}
	IFNOT
	LDSLICE 16
	LDSLICE 64
	NIP
	; end expValue
	;; push identifier tonBalance
	PUSH S6
	; colValue
	ROT
	NEWC
	STSLICE
	STU 64
	STSLICE
	ROTREV
	PUSHINT 267
	DICTSETB
	SETGLOB 26
	; end colValue
	;; push identifier now
	NOW
	;; uint32
	; expValue
	;; fetch _roster
	;; push identifier from
	PUSH S2
	GETGLOB 26
	DUP2
	PUSHINT 267
	DICTGET
	PUSHCONT {
		NEWC
		PUSHINT 400
		STZEROES
		ENDC
		CTOS
	}
	IFNOT
	PUSHINT 368
	LDSLICEX
	DROP
	; end expValue
	BLKSWAP 1, 3
	; colValue
	SWAP
	NEWC
	STSLICE
	STU 32
	ROTREV
	PUSHINT 267
	DICTSETB
	SETGLOB 26
	; end colValue
}
IFELSE
;; end if
; end function updateTonBalance
BLKDROP 4
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro setEnv
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode console
LDMSGADDR
; Decode eventLog
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode root
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode medium
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode logLevel
LDUQ 16
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 16
}
IFNOT
ENDS
;; param: console
;; param: eventLog
;; param: root
;; param: medium
;; param: logLevel
; modifier accept
ACCEPT
; function setEnv
;; push identifier console
;; push identifier eventLog
;; push identifier root
;; push identifier medium
;; push identifier logLevel
BLKPUSH 5, 4
CALLREF {
	CALL $_setEnv_internal_macro$
}
;; Remote call Base.updateEnv
;; push identifier console
PUSH S4
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x405f5e100000000000000000000000000003_
STSLICER
NEWC
STSLICECONST x5bba736f
;; console
;; push identifier console
PUSH S6
STSLICER
;; eventLog
;; push identifier eventLog
PUSH S5
STSLICER
;; root
;; push identifier root
PUSH S4
STSLICER
NEWC
;; medium
;; push identifier medium
PUSH S4
STSLICER
;; logLevel
;; push identifier logLevel
PUSH S3
STUR 16
STBREFR
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
;; Remote call Base.updateEnv
;; push identifier eventLog
PUSH S3
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x405f5e100000000000000000000000000003_
STSLICER
NEWC
STSLICECONST x5bba736f
;; console
;; push identifier console
PUSH S6
STSLICER
;; eventLog
;; push identifier eventLog
PUSH S5
STSLICER
;; root
;; push identifier root
PUSH S4
STSLICER
NEWC
;; medium
;; push identifier medium
PUSH S4
STSLICER
;; logLevel
;; push identifier logLevel
PUSH S3
STUR 16
STBREFR
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
;; Remote call Base.updateEnv
;; push identifier medium
PUSH S1
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x405f5e100000000000000000000000000003_
STSLICER
NEWC
STSLICECONST x5bba736f
;; console
;; push identifier console
PUSH S6
STSLICER
;; eventLog
;; push identifier eventLog
PUSH S5
STSLICER
;; root
;; push identifier root
PUSH S4
STSLICER
NEWC
;; medium
;; push identifier medium
PUSH S4
STSLICER
;; logLevel
;; push identifier logLevel
PUSH S3
STUR 16
STBREFR
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
;; Remote call Root.updateWalletsEnv
;; push identifier this
; call function of this
MYADDR
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x411e1a3000000000000000000000000000006be7cf97_
STSLICER
ENDC
PUSHINT 0
SENDRAWMSG
; end function setEnv
; end modifier accept
BLKDROP 5
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro updateWalletsEnv
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
; modifier adm
;; if
;; get member sender
GETGLOB 9
;; push identifier _console
GETGLOB 12
SDEQ
PUSHCONT {
	;; index
	;; get member sender
	GETGLOB 9
	;; push identifier _clients
	GETGLOB 19
	PUSHINT 267
	DICTGET
	PUSHCONT {
		PLDU 16
	}
	PUSHCONT {
		PUSHINT 0
	}
	IFELSE
	PUSHINT 117
	CALLREF {
		CALL $_error_internal_macro$
	}
}
IFNOT
;; end if
ACCEPT
; function updateWalletsEnv
;; push identifier _roster
GETGLOB 26
DUP
PUSHINT 267
DICTMIN
PUSHCONT {
	DUP
	ROT
	LDU 16
	LDU 64
	LDU 256
	LDU 32
	PLDU 32
	TUPLE 5
}
PUSHCONT {
	NULL
	NULL
	NULL
}
IFELSE
PUSHCONT {
	PUSH S2
	ISNULL
	NOT
}
PUSHCONT {
	;; Remote call Base.updateEnv
	;; push identifier addr
	PUSH S1
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHSLICE x405f5e100000000000000000000000000003_
	STSLICER
	NEWC
	STSLICECONST x5bba736f
	;; console
	;; push identifier _console
	GETGLOB 12
	STSLICER
	;; eventLog
	;; push identifier _eventLog
	GETGLOB 13
	STSLICER
	;; root
	;; push identifier _root
	GETGLOB 14
	STSLICER
	;; medium
	;; push identifier _medium
	GETGLOB 15
	NEWC
	STSLICE 
	;; logLevel
	;; push identifier _logLevel
	GETGLOB 16
	STUR 16
	STBREFR
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
	PUSH2 S2, S3
	PUSHINT 267
	DICTGETNEXT
	PUSHCONT {
		DUP
		ROT
		LDU 16
		LDU 64
		LDU 256
		LDU 32
		PLDU 32
		TUPLE 5
	}
	PUSHCONT {
		NULL
		NULL
		NULL
	}
	IFELSE
	BLKDROP2 3, 3
}
WHILE
BLKDROP 4
; end for
; end function updateWalletsEnv
; end modifier adm
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro updateSystemEnv
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
; modifier adm
;; if
;; get member sender
GETGLOB 9
;; push identifier _console
GETGLOB 12
SDEQ
PUSHCONT {
	;; index
	;; get member sender
	GETGLOB 9
	;; push identifier _clients
	GETGLOB 19
	PUSHINT 267
	DICTGET
	PUSHCONT {
		PLDU 16
	}
	PUSHCONT {
		PUSHINT 0
	}
	IFELSE
	PUSHINT 117
	CALLREF {
		CALL $_error_internal_macro$
	}
}
IFNOT
;; end if
ACCEPT
; function updateSystemEnv
;; push identifier _roster
GETGLOB 26
DUP
PUSHINT 267
DICTMIN
PUSHCONT {
	DUP
	ROT
	LDU 16
	LDU 64
	LDU 256
	LDU 32
	PLDU 32
	TUPLE 5
}
PUSHCONT {
	NULL
	NULL
	NULL
}
IFELSE
PUSHCONT {
	PUSH S2
	ISNULL
	NOT
}
PUSHCONT {
	;; Remote call Base.updateEnv
	;; push identifier addr
	PUSH S1
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHSLICE x405f5e100000000000000000000000000003_
	STSLICER
	NEWC
	STSLICECONST x5bba736f
	;; console
	;; push identifier _console
	GETGLOB 12
	STSLICER
	;; eventLog
	;; push identifier _eventLog
	GETGLOB 13
	STSLICER
	;; root
	;; push identifier _root
	GETGLOB 14
	STSLICER
	;; medium
	;; push identifier _medium
	GETGLOB 15
	NEWC
	STSLICE 
	;; logLevel
	;; push identifier _logLevel
	GETGLOB 16
	STUR 16
	STBREFR
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
	;; Remote call EventLog.meet
	;; push identifier _eventLog
	GETGLOB 13
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHSLICE x402625a00000000000000000000000000000697817b1_
	STSLICER
	;; id
	;; get member id
	;; push identifier wi
	PUSH S1
	INDEX 0
	STUR 16
	;; addr
	;; push identifier addr
	PUSH S2
	STSLICER
	ENDC
	PUSHINT 0
	SENDRAWMSG
	;; Remote call Medium.registerTokenWallet
	;; push identifier _medium
	GETGLOB 15
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHSLICE x402625a0000000000000000000000000000079d90823_
	STSLICER
	;; id
	;; get member id
	;; push identifier wi
	PUSH S1
	INDEX 0
	STUR 16
	;; a
	;; push identifier addr
	PUSH S2
	STSLICER
	ENDC
	PUSHINT 0
	SENDRAWMSG
	PUSH2 S2, S3
	PUSHINT 267
	DICTGETNEXT
	PUSHCONT {
		DUP
		ROT
		LDU 16
		LDU 64
		LDU 256
		LDU 32
		PLDU 32
		TUPLE 5
	}
	PUSHCONT {
		NULL
		NULL
		NULL
	}
	IFELSE
	BLKDROP2 3, 3
}
WHILE
BLKDROP 4
; end for
; end function updateSystemEnv
; end modifier adm
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro registerOwners
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
; modifier adm
;; if
;; get member sender
GETGLOB 9
;; push identifier _console
GETGLOB 12
SDEQ
PUSHCONT {
	;; index
	;; get member sender
	GETGLOB 9
	;; push identifier _clients
	GETGLOB 19
	PUSHINT 267
	DICTGET
	PUSHCONT {
		PLDU 16
	}
	PUSHCONT {
		PUSHINT 0
	}
	IFELSE
	PUSHINT 117
	CALLREF {
		CALL $_error_internal_macro$
	}
}
IFNOT
;; end if
ACCEPT
; function registerOwners
;; push identifier _owners
GETGLOB 24
DUP
PUSHINT 8
DICTUMIN
PUSHCONT {
	DUP
	ROT
	LDU 16
	LDU 16
	LDMSGADDR
	LDMSGADDR
	PLDU 32
	TUPLE 5
}
PUSHCONT {
	NULL
	NULL
	NULL
}
IFELSE
PUSHCONT {
	PUSH S2
	ISNULL
	NOT
}
PUSHCONT {
	;; Remote call Medium.registerOwner
	;; push identifier _medium
	GETGLOB 15
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHSLICE x402625a00000000000000000000000000003_
	STSLICER
	NEWC
	STSLICECONST x53404b1f
	;; ownerId
	;; push identifier id
	PUSH S3
	STUR 8
	;; id
	;; get member clientId
	;; push identifier oi
	PUSH S2
	INDEX 0
	STUR 16
	;; a
	;; get member addr
	;; push identifier oi
	PUSH S2
	INDEX 2
	STSLICER
	;; tid
	;; get member tokenWalletId
	;; push identifier oi
	PUSH S2
	INDEX 1
	STUR 16
	;; ta
	;; get member tokenWalletAddr
	;; push identifier oi
	PUSH S2
	INDEX 3
	STSLICER
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
	;; Remote call OwnerWallet.updateEnv
	;; get member addr
	;; push identifier oi
	DUP
	INDEX 2
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHSLICE x402625a00000000000000000000000000003_
	STSLICER
	NEWC
	STSLICECONST x5bba736f
	;; console
	;; push identifier _console
	GETGLOB 12
	STSLICER
	;; eventLog
	;; push identifier _eventLog
	GETGLOB 13
	STSLICER
	;; root
	;; push identifier _root
	GETGLOB 14
	STSLICER
	;; medium
	;; push identifier _medium
	GETGLOB 15
	NEWC
	STSLICE 
	;; logLevel
	;; push identifier _logLevel
	GETGLOB 16
	STUR 16
	STBREFR
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
	;; Remote call TokenWallet.updateEnv
	;; get member tokenWalletAddr
	;; push identifier oi
	DUP
	INDEX 3
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHSLICE x402625a00000000000000000000000000003_
	STSLICER
	NEWC
	STSLICECONST x5bba736f
	;; console
	;; push identifier _console
	GETGLOB 12
	STSLICER
	;; eventLog
	;; push identifier _eventLog
	GETGLOB 13
	STSLICER
	;; root
	;; push identifier _root
	GETGLOB 14
	STSLICER
	;; medium
	;; push identifier _medium
	GETGLOB 15
	NEWC
	STSLICE 
	;; logLevel
	;; push identifier _logLevel
	GETGLOB 16
	STUR 16
	STBREFR
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
	PUSH2 S2, S3
	PUSHINT 8
	DICTUGETNEXT
	PUSHCONT {
		DUP
		ROT
		LDU 16
		LDU 16
		LDMSGADDR
		LDMSGADDR
		PLDU 32
		TUPLE 5
	}
	PUSHCONT {
		NULL
		NULL
		NULL
	}
	IFELSE
	BLKDROP2 3, 3
}
WHILE
BLKDROP 4
; end for
; end function registerOwners
; end modifier adm
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro updateSystemImage
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode console
;; decode struct CTImage console
;; decode CTImage.name
LDREF
;; decode CTImage.initialBalance
LDU 8
;; decode CTImage.si
;; decode TvmCell
LDREF
;; build struct CTImage ss:4
BLKSWAP 3, 1
TUPLE 3
SWAP
; Decode eventLog
;; decode struct CTImage eventLog
;; decode CTImage.name
LDREF
;; decode CTImage.initialBalance
LDU 8
;; decode CTImage.si
;; decode TvmCell
;; load next cell
LDREF
ENDS
CTOS
LDREF
;; build struct CTImage ss:5
BLKSWAP 3, 1
TUPLE 3
SWAP
; Decode root
;; decode struct CTImage root
;; decode CTImage.name
LDREF
;; decode CTImage.initialBalance
LDU 8
;; decode CTImage.si
;; decode TvmCell
LDREF
;; build struct CTImage ss:6
BLKSWAP 3, 1
TUPLE 3
SWAP
; Decode medium
;; decode struct CTImage medium
;; decode CTImage.name
;; load next cell
LDREF
ENDS
CTOS
LDREF
;; decode CTImage.initialBalance
LDU 8
;; decode CTImage.si
;; decode TvmCell
LDREF
;; build struct CTImage ss:7
BLKSWAP 3, 1
TUPLE 3
SWAP
ENDS
;; param: console
;; param: eventLog
;; param: root
;; param: medium
; function updateSystemImage
; expValue
;; fetch _images
PUSHINT 1
GETGLOB 22
; end expValue
;; push identifier console
PUSH S5
; colValue
UNTUPLE 3
XCHG s2
NEWC
STREF
STU 8
STREF
ROTREV
PUSHINT 8
DICTUSETB
; end colValue
; expValue
;; fetch _images
DUP
SETGLOB 22
PUSHINT 2
SWAP
; end expValue
;; push identifier eventLog
PUSH S4
; colValue
UNTUPLE 3
XCHG s2
NEWC
STREF
STU 8
STREF
ROTREV
PUSHINT 8
DICTUSETB
; end colValue
; expValue
;; fetch _images
DUP
SETGLOB 22
PUSHINT 3
SWAP
; end expValue
;; push identifier root
PUSH S3
; colValue
UNTUPLE 3
XCHG s2
NEWC
STREF
STU 8
STREF
ROTREV
PUSHINT 8
DICTUSETB
; end colValue
; expValue
;; fetch _images
DUP
SETGLOB 22
PUSHINT 4
SWAP
; end expValue
;; push identifier medium
PUSH S2
; colValue
UNTUPLE 3
XCHG s2
NEWC
STREF
STU 8
STREF
ROTREV
PUSHINT 8
DICTUSETB
SETGLOB 22
; end colValue
;; Remote call Root.deploySystem
;; push identifier this
; call function of this
MYADDR
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x411e1a300000000000000000000000000000b1598eab_
STSLICER
ENDC
PUSHINT 0
SENDRAWMSG
; end function updateSystemImage
BLKDROP 4
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro updateUserImage
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode owner
;; decode struct CTImage owner
;; decode CTImage.name
LDREF
;; decode CTImage.initialBalance
LDU 8
;; decode CTImage.si
;; decode TvmCell
LDREF
;; build struct CTImage ss:4
BLKSWAP 3, 1
TUPLE 3
SWAP
; Decode token
;; decode struct CTImage token
;; decode CTImage.name
LDREF
;; decode CTImage.initialBalance
LDU 8
;; decode CTImage.si
;; decode TvmCell
DUP
SBITREFS
EQINT 1
SWAP
EQINT 0
AND
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
;; build struct CTImage ss:5
BLKSWAP 3, 1
TUPLE 3
SWAP
; Decode ownerKeys
LDU 32
LDDICT
ROTREV
PAIR
SWAP
ENDS
;; param: owner
;; param: token
;; param: ownerKeys
; function updateUserImage
; expValue
;; fetch _images
PUSHINT 6
GETGLOB 22
; end expValue
;; push identifier owner
PUSH S4
; colValue
UNTUPLE 3
XCHG s2
NEWC
STREF
STU 8
STREF
ROTREV
PUSHINT 8
DICTUSETB
; end colValue
; expValue
;; fetch _images
DUP
SETGLOB 22
PUSHINT 7
SWAP
; end expValue
;; push identifier token
PUSH S3
; colValue
UNTUPLE 3
XCHG s2
NEWC
STREF
STU 8
STREF
ROTREV
PUSHINT 8
DICTUSETB
SETGLOB 22
; end colValue
; expValue
; end expValue
;; push identifier ownerKeys
DUP
; colValue
PUSHINT 33
SETGLOBVAR
; end colValue
;; Remote call Root.deployOwners
;; push identifier this
; call function of this
MYADDR
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x411e1a3000000000000000000000000000008acb95c5_
STSLICER
ENDC
PUSHINT 0
SENDRAWMSG
; end function updateUserImage
BLKDROP 3
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro updateRefillConfig
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode initialBalance
LDU 64
; Decode warnBalance
LDU 64
; Decode refillValue
LDU 64
; Decode updateTimeout
LDU 32
ENDS
;; param: initialBalance
;; param: warnBalance
;; param: refillValue
;; param: updateTimeout
; function updateRefillConfig
; expValue
; end expValue
;; push identifier initialBalance
PUSH S3
; colValue
SETGLOB 30
; end colValue
; expValue
; end expValue
;; push identifier warnBalance
PUSH S2
; colValue
SETGLOB 18
; end colValue
; expValue
; end expValue
;; push identifier refillValue
PUSH S1
; colValue
SETGLOB 31
; end colValue
; expValue
; end expValue
;; push identifier updateTimeout
DUP
; colValue
PUSHINT 32
SETGLOBVAR
; end colValue
; end function updateRefillConfig
BLKDROP 4
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	_error_internal
.type	_error_internal, @function
CALL $_error_internal_macro$

.macro _error_internal_macro
;; param: id
;; param: code
; function _error
;; if
;; push identifier _logLevel
GETGLOB 16
;; &
PUSHINT 1
AND
GTINT 0
PUSHCONT {
	;; Remote call IEventLog.logError
	;; push identifier _eventLog
	GETGLOB 13
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHSLICE x4017d7840000000000000000000000000000fa768efb_
	STSLICER
	;; id
	;; push identifier id
	PUSH S2
	STUR 16
	;; code
	;; push identifier code
	PUSH S1
	STUR 16
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
;; end if
; end function _error
DROP2

.globl	_checkTonBalance_internal
.type	_checkTonBalance_internal, @function
CALL $_checkTonBalance_internal_macro$

.macro _checkTonBalance_internal_macro
; function _checkTonBalance
;; get member balance
GETPARAM 7
INDEX 0
;; uint64
UFITS 64
;; decl: tonBalance
;; if
;; push identifier tonBalance
DUP
;; <
;; push identifier _warnBalance
GETGLOB 18
LESS
PUSHCONT {
	;; Remote call IRoot.updateTonBalance
	;; push identifier _root
	GETGLOB 14
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHSLICE x402625a00000000000000000000000000000e5f7ae0d_
	STSLICER
	;; id
	;; push identifier _id
	GETGLOB 11
	STUR 16
	;; tonBalance
	;; push identifier tonBalance
	PUSH S1
	STUR 64
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
;; end if
DROP
; end function _checkTonBalance

.macro initMember
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode id
LDU 16
; Decode console
LDMSGADDR
; Decode eventLog
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode root
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode medium
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode logLevel
LDUQ 16
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 16
}
IFNOT
ENDS
;; param: id
;; param: console
;; param: eventLog
;; param: root
;; param: medium
;; param: logLevel
; function initMember
; expValue
; end expValue
;; push identifier id
PUSH S5
; colValue
SETGLOB 11
; end colValue
;; push identifier console
;; push identifier eventLog
;; push identifier root
;; push identifier medium
;; push identifier logLevel
BLKPUSH 5, 4
CALLREF {
	CALL $_setEnv_internal_macro$
}
; end function initMember
BLKDROP 6
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	_setEnv_internal
.type	_setEnv_internal, @function
CALL $_setEnv_internal_macro$

.macro _setEnv_internal_macro
;; param: console
;; param: eventLog
;; param: root
;; param: medium
;; param: logLevel
; function _setEnv
; expValue
; end expValue
;; push identifier console
PUSH S4
; colValue
SETGLOB 12
; end colValue
; expValue
; end expValue
;; push identifier eventLog
PUSH S3
; colValue
SETGLOB 13
; end colValue
; expValue
; end expValue
;; push identifier root
PUSH S2
; colValue
SETGLOB 14
; end colValue
; expValue
; end expValue
;; push identifier medium
PUSH S1
; colValue
SETGLOB 15
; end colValue
; expValue
; end expValue
;; push identifier logLevel
DUP
; colValue
SETGLOB 16
; end colValue
; expValue
;; fetch _clients
;; push identifier console
PUSH S4
GETGLOB 19
; end expValue
PUSHINT 10
; colValue
NEWC
STU 16
ROTREV
PUSHINT 267
DICTSETB
; end colValue
; expValue
;; fetch _clients
DUP
SETGLOB 19
;; push identifier eventLog
PUSH S4
SWAP
; end expValue
PUSHINT 20
; colValue
NEWC
STU 16
ROTREV
PUSHINT 267
DICTSETB
; end colValue
; expValue
;; fetch _clients
DUP
SETGLOB 19
;; push identifier root
PUSH S3
SWAP
; end expValue
PUSHINT 30
; colValue
NEWC
STU 16
ROTREV
PUSHINT 267
DICTSETB
; end colValue
; expValue
;; fetch _clients
DUP
SETGLOB 19
;; push identifier medium
PUSH S2
SWAP
; end expValue
PUSHINT 40
; colValue
NEWC
STU 16
ROTREV
PUSHINT 267
DICTSETB
SETGLOB 19
; end colValue
; end function _setEnv
BLKDROP 5

.macro updateEnv
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode console
LDMSGADDR
; Decode eventLog
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode root
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode medium
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode logLevel
LDUQ 16
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 16
}
IFNOT
ENDS
;; param: console
;; param: eventLog
;; param: root
;; param: medium
;; param: logLevel
; function updateEnv
;; push identifier console
;; push identifier eventLog
;; push identifier root
;; push identifier medium
;; push identifier logLevel
BLKPUSH 5, 4
CALLREF {
	CALL $_setEnv_internal_macro$
}
; end function updateEnv
BLKDROP 5
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro getEnv
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
CALLREF {
	CALL $getEnv_internal_macro$
}
;; emitting 6 value(s)
PUSH S6
EQINT -1
PUSHCONT {
	PUSH S8
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 97
	STZEROES
	STSLICECONST 1
	NEWC
	STSLICECONST xb542a735
	PUSH S7
	STUR 16
	PUSH S6
	STSLICER
	PUSH S5
	STSLICER
	PUSH S4
	STSLICER
	NEWC
	PUSH S4
	STSLICER
	PUSH S3
	STUR 16
	STBREFR
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
BLKDROP 6
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getEnv_internal
.type	getEnv_internal, @function
CALL $getEnv_internal_macro$

.macro getEnv_internal_macro
;; ret param: id
PUSHINT 0
;; ret param: console
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: eventLog
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: root
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: medium
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: logLevel
PUSHINT 0
; function getEnv
;; return
;; push identifier _id
GETGLOB 11
;; push identifier _console
GETGLOB 12
;; push identifier _eventLog
GETGLOB 13
;; push identifier _root
GETGLOB 14
;; push identifier _medium
GETGLOB 15
;; push identifier _logLevel
GETGLOB 16
BLKDROP2 6, 6
; end function getEnv

.macro c7_to_c4
GETGLOB 2
NEWC
STU 256
GETGLOB 3
STUR 64
GETGLOB 6
STUR 1
NEWC
GETGLOB 14
GETGLOB 15
GETGLOB 18
GETGLOB 23
GETGLOB 24
GETGLOB 25
GETGLOB 26
GETGLOB 29
PUSHINT 32
GETGLOBVAR
REVERSE 10, 0
STSLICE
STSLICE
STU 64
STDICT
STDICT
STSLICE
STDICT
STU 16
STU 32
NEWC
GETGLOB 30
GETGLOB 31
PUSHINT 33
GETGLOBVAR
UNTUPLE 2
REVERSE 5, 0
STU 64
STU 64
STU 32
STDICT
GETGLOB 10
GETGLOB 11
GETGLOB 12
GETGLOB 13
GETGLOB 16
GETGLOB 17
GETGLOB 19
GETGLOB 20
GETGLOB 21
GETGLOB 27
GETGLOB 28
GETGLOB 22
REVERSE 15, 0
STBREF
STBREF
STU 8
STU 16
STSLICE
STSLICE
STU 16
STU 8
STDICT
STU 8
STU 16
STU 8
STU 16
STDICT
ENDC
POP C4

.macro c4_to_c7
PUSHROOT
CTOS        ; c4
LDU 256      ; pubkey c4
LDU 64      ; pubkey timestamp c4
LDU 1       ; pubkey [timestamp] constructor_flag memory
LDREFRTOS
LDMSGADDR
LDMSGADDR
LDU 64
LDDICT
LDDICT
LDMSGADDR
LDDICT
LDU 16
PLDU 32
PUSHINT 32
SETGLOBVAR
SETGLOB 29
SETGLOB 26
SETGLOB 25
SETGLOB 24
SETGLOB 23
SETGLOB 18
SETGLOB 15
SETGLOB 14
LDREFRTOS
LDU 64
LDU 64
LDU 32
PLDDICT
PAIR
PUSHINT 33
SETGLOBVAR
SETGLOB 31
SETGLOB 30
LDU 8
LDU 16
LDMSGADDR
LDMSGADDR
LDU 16
LDU 8
LDDICT
LDU 8
LDU 16
LDU 8
LDU 16
PLDDICT
SETGLOB 22
SETGLOB 28
SETGLOB 27
SETGLOB 21
SETGLOB 20
SETGLOB 19
SETGLOB 17
SETGLOB 16
SETGLOB 13
SETGLOB 12
SETGLOB 11
SETGLOB 10
TRUE
SETGLOB 1   ; pubkey [timestamp] constructor_flag
SETGLOB 6   ; pubkey [timestamp]
SETGLOB 3   ; D
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS        ; c4
DUP        ; c4 c4
SBITS      ; c4 bits
GTINT 1    ; c4 bits>1
PUSHCONT {
	LDU 256      ; pubkey c4
	LDU 64      ; pubkey timestamp c4
	LDU 1       ; pubkey [timestamp] constructor_flag memory
	LDREFRTOS
	LDMSGADDR
	LDMSGADDR
	LDU 64
	LDDICT
	LDDICT
	LDMSGADDR
	LDDICT
	LDU 16
	PLDU 32
	PUSHINT 32
	SETGLOBVAR
	SETGLOB 29
	SETGLOB 26
	SETGLOB 25
	SETGLOB 24
	SETGLOB 23
	SETGLOB 18
	SETGLOB 15
	SETGLOB 14
	LDREFRTOS
	LDU 64
	LDU 64
	LDU 32
	PLDDICT
	PAIR
	PUSHINT 33
	SETGLOBVAR
	SETGLOB 31
	SETGLOB 30
	LDU 8
	LDU 16
	LDMSGADDR
	LDMSGADDR
	LDU 16
	LDU 8
	LDDICT
	LDU 8
	LDU 16
	LDU 8
	LDU 16
	PLDDICT
	SETGLOB 22
	SETGLOB 28
	SETGLOB 27
	SETGLOB 21
	SETGLOB 20
	SETGLOB 19
	SETGLOB 17
	SETGLOB 16
	SETGLOB 13
	SETGLOB 12
	SETGLOB 11
	SETGLOB 10
	TRUE
	SETGLOB 1   ; pubkey [timestamp] constructor_flag
	SETGLOB 6   ; pubkey [timestamp]
	SETGLOB 3   ; D
	SETGLOB 2
}
PUSHCONT {
	PLDDICT   ; D
	; init _version
	PUSHINT 0
	SETGLOB 10
	; init _id
	PUSHINT 0
	SETGLOB 11
	; init _console
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 12
	; init _eventLog
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 13
	; init _root
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 14
	; init _medium
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 15
	; init _logLevel
	PUSHINT 0
	SETGLOB 16
	; init _transferFee
	PUSHINT 0
	SETGLOB 17
	; init _warnBalance
	PUSHINT 0
	SETGLOB 18
	; init _clients
	NEWDICT
	SETGLOB 19
	; init _ver
	PUSHINT 0
	SETGLOB 20
	; init _counter
	PUSHINT 0
	SETGLOB 21
	; init _images
	NEWDICT
	SETGLOB 22
	; init _deployed
	NEWDICT
	SETGLOB 23
	; init _owners
	NEWDICT
	SETGLOB 24
	; init _repo
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 25
	; init _roster
	NEWDICT
	SETGLOB 26
	; init _ownerIndex
	PUSHINT 0
	SETGLOB 27
	; init _ownerCounter
	PUSHINT 0
	SETGLOB 28
	; init _walletCounter
	PUSHINT 0
	SETGLOB 29
	; init _initialBalance
	PUSHINT 0
	SETGLOB 30
	; init _refillValue
	PUSHINT 0
	SETGLOB 31
	; init _updateTimeout
	PUSHINT 0
	PUSHINT 32
	SETGLOBVAR
	; init _ownerKeys
	PUSHINT 0
	NEWDICT
	PAIR
	PUSHINT 33
	SETGLOBVAR
	; set contract pubkey
	PUSHINT 0
	SWAP
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
	PUSHINT 0 ; constructor_flag
	SETGLOB 6
	TRUE
	SETGLOB 1
	;; init state var: _version
	PUSHINT 30
	SETGLOB 10
	;; init state var: _transferFee
	PUSHINT 1
	SETGLOB 17
	;; init state var: _warnBalance
	PUSHINT 1990000000
	SETGLOB 18
	;; init state var: _ver
	PUSHINT 20
	;; init state var: _counter
	;; push identifier _ver
	DUP
	SETGLOB 20
	;; *
	MULCONST 10
	UFITS 8
	SETGLOB 21
	;; init state var: _ownerIndex
	PUSHINT 0
	SETGLOB 27
	;; init state var: _ownerCounter
	PUSHINT 1
	SETGLOB 28
	;; init state var: _walletCounter
	PUSHINT 10000
	SETGLOB 29
	;; init state var: _initialBalance
	PUSHINT 2000000000
	SETGLOB 30
	;; init state var: _refillValue
	PUSHINT 5000000000
	SETGLOB 31
	;; init state var: _updateTimeout
	PUSHINT 30
	PUSHINT 32
	SETGLOBVAR
}
IFELSE

.internal-alias :main_internal, 0
.internal :main_internal
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Function: main_internal
;; param: contract_balance
;; param: msg_balance
;; param: int_msg_info
;; param: msg_body_slice
;; param: transaction_type
PUSH S2
CTOS
LDU 4       ; bounced tail
LDMSGADDR   ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
IFRET
PUSH S1    ; body
SEMPTY     ; isEmpty
IFRET
PUSH S1 ; body
LDU 32  ; funcId body'
PUSH S1 ; funcId body' funcId
IFNOTRET
SWAP
CALLREF {
	CALL $public_function_selector$
}
GETGLOB 7
ISNULL
THROWIF 60

.internal-alias :main_external, -1
.internal :main_external
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 9
PUSH S1
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHINT 512
	LDSLICEX ; signatureSlice msgSlice
	DUP      ; signatureSlice msgSlice msgSlice
	HASHSU   ; signatureSlice msgSlice hashMsgSlice
	ROT
	GETGLOB 2
	CHKSIGNU      ; msgSlice isSigned
	THROWIFNOT 40 ; msgSlice
}
IF
LDU 64                         ; timestamp msgSlice
SWAP                           ; msgSlice timestamp
CALL $replay_protection_macro$ ; msgSlice
LDU  32 ; funcId body
SWAP    ; body funcId
CALLREF {
	CALL $public_function_selector$
}
GETGLOB 7
ISNULL
THROWIF 60

.macro _clients
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 19
PUSHSLICE xc0000000000000000000000000dccdc55c
NEWC
STSLICE
PUSH S1
SWAP
STDICT
ENDC
PUSHINT 0
SENDRAWMSG
TRUE
SETGLOB 7

.macro _images
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 22
PUSHSLICE xc0000000000000000000000000bfa8ccdc
NEWC
STSLICE
PUSH S1
SWAP
STDICT
ENDC
PUSHINT 0
SENDRAWMSG
TRUE
SETGLOB 7

.macro _deployed
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 23
PUSHSLICE xc0000000000000000000000000a9fdf791
NEWC
STSLICE
PUSH S1
SWAP
STDICT
ENDC
PUSHINT 0
SENDRAWMSG
TRUE
SETGLOB 7

.macro _owners
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 24
PUSHSLICE xc0000000000000000000000000ae58c32d
NEWC
STSLICE
PUSH S1
SWAP
STDICT
ENDC
PUSHINT 0
SENDRAWMSG
TRUE
SETGLOB 7

.macro _roster
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 26
PUSHSLICE xc000000000000000000000000096e2f0da
NEWC
STSLICE
PUSH S1
SWAP
STDICT
ENDC
PUSHINT 0
SENDRAWMSG
TRUE
SETGLOB 7

.macro public_function_selector
DUP
PUSHINT 629824879
LEQ
PUSHCONT {
	DUP
	PUSHINT 341796862
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 298656225
		EQUAL
		IFJMPREF {
			CALL $deployUser$
		}
		DUP
		PUSHINT 341796862
		EQUAL
		IFJMPREF {
			CALL $registerOwners$
		}
	}
	IFJMP
	DUP
	PUSHINT 460646377
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 383971546
		EQUAL
		IFJMPREF {
			CALL $_roster$
		}
		DUP
		PUSHINT 460646377
		EQUAL
		IFJMPREF {
			CALL $updateImage$
		}
	}
	IFJMP
	DUP
	PUSHINT 621183170
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 501789224
		EQUAL
		IFJMPREF {
			CALL $updateRefillConfig$
		}
		DUP
		PUSHINT 621183170
		EQUAL
		IFJMPREF {
			CALL $updateSystemImage$
		}
	}
	IFJMP
	DUP
	PUSHINT 629824879
	EQUAL
	IFJMPREF {
		CALL $initMember$
	}
}
IFJMP
DUP
PUSHINT 930574591
LEQ
PUSHCONT {
	DUP
	PUSHINT 777569069
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 704509841
		EQUAL
		IFJMPREF {
			CALL $_deployed$
		}
		DUP
		PUSHINT 777569069
		EQUAL
		IFJMPREF {
			CALL $_owners$
		}
	}
	IFJMP
	DUP
	PUSHINT 819970424
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 817967675
		EQUAL
		IFJMPREF {
			CALL $onDeploy$
		}
		DUP
		PUSHINT 819970424
		EQUAL
		IFJMPREF {
			CALL $deployTokenWalletsWithKeys$
		}
	}
	IFJMP
	DUP
	PUSHINT 905177035
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 893560629
		EQUAL
		IFJMPREF {
			CALL $getEnv$
		}
		DUP
		PUSHINT 905177035
		EQUAL
		IFJMPREF {
			CALL $updateWalletsEnv$
		}
	}
	IFJMP
	DUP
	PUSHINT 930574591
	EQUAL
	IFJMPREF {
		CALL $updateSystemEnv$
	}
}
IFJMP
DUP
PUSHINT 1556989276
LEQ
PUSHCONT {
	DUP
	PUSHINT 1068027100
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 1051103105
		EQUAL
		IFJMPREF {
			CALL $onTokenWalletDeploy$
		}
		DUP
		PUSHINT 1068027100
		EQUAL
		IFJMPREF {
			CALL $_images$
		}
	}
	IFJMP
	DUP
	PUSHINT 1392661587
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 1164298978
		EQUAL
		IFJMPREF {
			CALL $deployOwners$
		}
		DUP
		PUSHINT 1392661587
		EQUAL
		IFJMPREF {
			CALL $setEnv$
		}
	}
	IFJMP
	DUP
	PUSHINT 1538945903
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 1487718229
		EQUAL
		IFJMPREF {
			CALL $deploySystem$
		}
		DUP
		PUSHINT 1538945903
		EQUAL
		IFJMPREF {
			CALL $updateEnv$
		}
	}
	IFJMP
	DUP
	PUSHINT 1556989276
	EQUAL
	IFJMPREF {
		CALL $_clients$
	}
}
IFJMP
DUP
PUSHINT 1929107206
LEQ
PUSHCONT {
	DUP
	PUSHINT 1634270018
	EQUAL
	IFJMPREF {
		CALL $updateUserImage$
	}
	DUP
	PUSHINT 1756716863
	EQUAL
	IFJMPREF {
		CALL $constructor$
	}
	DUP
	PUSHINT 1919624742
	EQUAL
	IFJMPREF {
		CALL $deployTokenWallets$
	}
	DUP
	PUSHINT 1929107206
	EQUAL
	IFJMPREF {
		CALL $updateTonBalance$
	}
}
IFJMP
