.macro constructor
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
;; constructor protection
GETGLOB 6
THROWIF 51
PUSHINT 1
SETGLOB 6
;; end constructor protection
ENDS
ACCEPT
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro deploy
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
; modifier accept
ACCEPT
; function deploy
;; index
PUSHINT 3
;; push identifier _images
GETGLOB 11
PUSHINT 8
DICTUGET
PUSHCONT {
	LDREF
	LDU 8
	PLDREF
	TUPLE 3
}
PUSHCONT {
	PUSHREF {
	}
	PUSHINT 0
	PUSHREF {
	}
	TUPLE 3
}
IFELSE
;; decl: image
;; get member si
;; push identifier image
DUP
INDEX 2
GETGLOB 2
CALLREF {
	CALL $insert_pubkey_macro$
}
;; decl: signed
;; get member initialBalance
;; push identifier image
PUSH S1
INDEX 1
;; uint128
;; *
PUSHINT 1000000000
MUL
UFITS 128
;; decl: val
;; push identifier signed
PUSH2 S1, S1
HASHCU
NEWC
STSLICECONST x801_
STU 256
ENDC
CTOS
;; push identifier val
PUSH2 S2, S0
NEWC
STSLICECONST x62_
STSLICE
SWAP
STGRAMS
PUSHSLICE x000000000000000000000000007_
STSLICER
PUSH S2
STREFR
STSLICECONST x345aaf9fc_
ENDC
PUSHINT 0
SENDRAWMSG
BLKDROP 5
; end function deploy
; end modifier accept
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro onDeploy
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode id
LDU 16
ENDS
;; param: id
; modifier accept
ACCEPT
; function onDeploy
;; if
;; push identifier id
DUP
EQINT 30
PUSHCONT {
	;; get member sender
	GETGLOB 9
	;; decl: from
	; expValue
	;; fetch _deployed
	PUSHINT 3
	GETGLOB 12
	; end expValue
	;; push identifier from
	PUSH S2
	; colValue
	ROTREV
	PUSHINT 8
	DICTUSET
	SETGLOB 12
	; end colValue
	;; Remote call Root.updateSystemImage
	;; push identifier from
	DUP
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHSLICE x411e1a300000000000000000000000000003_
	STSLICER
	NEWC
	STSLICECONST x250680c2
	;; console
	;; index
	PUSHINT 1
	;; push identifier _images
	GETGLOB 11
	PUSHINT 8
	DICTUGET
	PUSHCONT {
		LDREF
		LDU 8
		PLDREF
		TUPLE 3
	}
	PUSHCONT {
		PUSHREF {
		}
		PUSHINT 0
		PUSHREF {
		}
		TUPLE 3
	}
	IFELSE
	UNTUPLE 3
	BLKSWAP 1, 3
	PUSH S3
	STREFR
	PUSH S2
	STUR 8
	PUSH S1
	STREFR
	BLKDROP2 3, 1
	;; eventLog
	;; index
	PUSHINT 2
	;; push identifier _images
	GETGLOB 11
	PUSHINT 8
	DICTUGET
	PUSHCONT {
		LDREF
		LDU 8
		PLDREF
		TUPLE 3
	}
	PUSHCONT {
		PUSHREF {
		}
		PUSHINT 0
		PUSHREF {
		}
		TUPLE 3
	}
	IFELSE
	UNTUPLE 3
	BLKSWAP 1, 3
	PUSH S3
	STREFR
	PUSH S2
	STUR 8
	NEWC
	PUSH S2
	STREFR
	BLKDROP2 3, 2
	;; root
	;; index
	PUSHINT 3
	;; push identifier _images
	GETGLOB 11
	PUSHINT 8
	DICTUGET
	PUSHCONT {
		LDREF
		LDU 8
		PLDREF
		TUPLE 3
	}
	PUSHCONT {
		PUSHREF {
		}
		PUSHINT 0
		PUSHREF {
		}
		TUPLE 3
	}
	IFELSE
	UNTUPLE 3
	BLKSWAP 1, 3
	PUSH S3
	STREFR
	PUSH S2
	STUR 8
	PUSH S1
	STREFR
	BLKDROP2 3, 1
	;; medium
	;; index
	PUSHINT 4
	;; push identifier _images
	GETGLOB 11
	PUSHINT 8
	DICTUGET
	PUSHCONT {
		LDREF
		LDU 8
		PLDREF
		TUPLE 3
	}
	PUSHCONT {
		PUSHREF {
		}
		PUSHINT 0
		PUSHREF {
		}
		TUPLE 3
	}
	IFELSE
	UNTUPLE 3
	BLKSWAP 1, 3
	NEWC
	PUSH S4
	STREFR
	PUSH S3
	STUR 8
	PUSH S2
	STREFR
	BLKDROP2 3, 2
	STBREFR
	STBREFR
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
	;; Remote call Root.updateUserImage
	;; push identifier from
	DUP
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHSLICE x411e1a300000000000000000000000000003_
	STSLICER
	NEWC
	STSLICECONST x6168fb42
	;; owner
	;; index
	PUSHINT 6
	;; push identifier _images
	GETGLOB 11
	PUSHINT 8
	DICTUGET
	PUSHCONT {
		LDREF
		LDU 8
		PLDREF
		TUPLE 3
	}
	PUSHCONT {
		PUSHREF {
		}
		PUSHINT 0
		PUSHREF {
		}
		TUPLE 3
	}
	IFELSE
	UNTUPLE 3
	BLKSWAP 1, 3
	PUSH S3
	STREFR
	PUSH S2
	STUR 8
	PUSH S1
	STREFR
	BLKDROP2 3, 1
	;; token
	;; index
	PUSHINT 7
	;; push identifier _images
	GETGLOB 11
	PUSHINT 8
	DICTUGET
	PUSHCONT {
		LDREF
		LDU 8
		PLDREF
		TUPLE 3
	}
	PUSHCONT {
		PUSHREF {
		}
		PUSHINT 0
		PUSHREF {
		}
		TUPLE 3
	}
	IFELSE
	UNTUPLE 3
	BLKSWAP 1, 3
	PUSH S3
	STREFR
	PUSH S2
	STUR 8
	NEWC
	PUSH S2
	STREFR
	BLKDROP2 3, 2
	;; ownerKeys
	;; push identifier _ownerKeys
	GETGLOB 10
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	STBREFR
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
	DROP
}
IF
;; end if
; end function onDeploy
; end modifier accept
DROP
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro updateImage
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode index
LDU 8
; Decode image
;; decode struct CTImage image
;; decode CTImage.name
LDREF
;; decode CTImage.initialBalance
LDU 8
;; decode CTImage.si
;; decode TvmCell
LDREF
;; build struct CTImage ss:5
BLKSWAP 3, 1
TUPLE 3
SWAP
ENDS
;; param: index
;; param: image
; modifier accept
ACCEPT
; function updateImage
; expValue
;; fetch _images
;; push identifier index
PUSH S1
GETGLOB 11
; end expValue
;; push identifier image
PUSH S2
; colValue
UNTUPLE 3
XCHG s2
NEWC
STREF
STU 8
STREF
ROTREV
PUSHINT 8
DICTUSETB
SETGLOB 11
; end colValue
; end function updateImage
; end modifier accept
DROP2
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro setOwnerKeys
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode keys
LDU 32
LDDICT
ROTREV
PAIR
SWAP
ENDS
;; param: keys
; modifier accept
ACCEPT
; function setOwnerKeys
; expValue
; end expValue
;; push identifier keys
; colValue
; end colValue
; end function setOwnerKeys
; end modifier accept
SETGLOB 10
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro upgrade
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode c
;; decode TvmCell
LDREF
ENDS
;; param: c
; function upgrade
;; push identifier c
DUP
CTOS
LDREF
; colValue
DROP
;; decl: newcode
ACCEPT
CALLREF {
	CALL $c7_to_c4$
}
COMMIT
;; push identifier newcode
DUP
SETCODE
;; push identifier newcode
DUP
CTOS
PLDREF
CTOS
BLESS
POP c3
CALLREF {
	CALL $:onCodeUpgrade$
}
; end function upgrade
DROP2
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.internal-alias :onCodeUpgrade, 2
.internal :onCodeUpgrade
; function onCodeUpgrade
;; set default state vars
PUSHINT 0
NEWDICT
PAIR
SETGLOB 10
NEWDICT
SETGLOB 11
NEWDICT
SETGLOB 12
;; end set default state vars
; end function onCodeUpgrade
CALLREF {
	CALL $c7_to_c4$
}
COMMIT
THROW 0

.macro c7_to_c4
GETGLOB 2
NEWC
STU 256
GETGLOB 3
STUR 64
GETGLOB 6
STUR 1
GETGLOB 10
UNTUPLE 2
GETGLOB 11
GETGLOB 12
REVERSE 5, 0
STU 32
STDICT
STDICT
STDICT
ENDC
POP C4

.macro c4_to_c7
PUSHROOT
CTOS        ; c4
LDU 256      ; pubkey c4
LDU 64      ; pubkey timestamp c4
LDU 1       ; pubkey [timestamp] constructor_flag memory
LDU 32
LDDICT
ROTREV
PAIR
SETGLOB 10
LDDICT
PLDDICT
SETGLOB 12
SETGLOB 11
TRUE
SETGLOB 1   ; pubkey [timestamp] constructor_flag
SETGLOB 6   ; pubkey [timestamp]
SETGLOB 3   ; D
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS        ; c4
DUP        ; c4 c4
SBITS      ; c4 bits
GTINT 1    ; c4 bits>1
PUSHCONT {
	LDU 256      ; pubkey c4
	LDU 64      ; pubkey timestamp c4
	LDU 1       ; pubkey [timestamp] constructor_flag memory
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SETGLOB 10
	LDDICT
	PLDDICT
	SETGLOB 12
	SETGLOB 11
	TRUE
	SETGLOB 1   ; pubkey [timestamp] constructor_flag
	SETGLOB 6   ; pubkey [timestamp]
	SETGLOB 3   ; D
	SETGLOB 2
}
PUSHCONT {
	PLDDICT   ; D
	; init _ownerKeys
	PUSHINT 0
	NEWDICT
	PAIR
	SETGLOB 10
	; init _images
	NEWDICT
	SETGLOB 11
	; init _deployed
	NEWDICT
	SETGLOB 12
	; set contract pubkey
	PUSHINT 0
	SWAP
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
	PUSHINT 0 ; constructor_flag
	SETGLOB 6
	TRUE
	SETGLOB 1
}
IFELSE

.internal-alias :main_internal, 0
.internal :main_internal
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Function: main_internal
;; param: contract_balance
;; param: msg_balance
;; param: int_msg_info
;; param: msg_body_slice
;; param: transaction_type
PUSH S2
CTOS
LDU 4       ; bounced tail
LDMSGADDR   ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
IFRET
PUSH S1    ; body
SEMPTY     ; isEmpty
IFRET
PUSH S1 ; body
LDU 32  ; funcId body'
PUSH S1 ; funcId body' funcId
IFNOTRET
SWAP
CALLREF {
	CALL $public_function_selector$
}
GETGLOB 7
ISNULL
THROWIF 60

.internal-alias :main_external, -1
.internal :main_external
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 9
PUSH S1
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHINT 512
	LDSLICEX ; signatureSlice msgSlice
	DUP      ; signatureSlice msgSlice msgSlice
	HASHSU   ; signatureSlice msgSlice hashMsgSlice
	ROT
	GETGLOB 2
	CHKSIGNU      ; msgSlice isSigned
	THROWIFNOT 40 ; msgSlice
}
IF
LDU 64                         ; timestamp msgSlice
SWAP                           ; msgSlice timestamp
CALL $replay_protection_macro$ ; msgSlice
LDU  32 ; funcId body
SWAP    ; body funcId
CALLREF {
	CALL $public_function_selector$
}
GETGLOB 7
ISNULL
THROWIF 60

.macro _ownerKeys
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 10
PUSHSLICE xc0000000000000000000000000bc8943b2
NEWC
STSLICE
PUSH S1
UNPAIR
XCHG s2
STU 32
STDICT
ENDC
PUSHINT 0
SENDRAWMSG
TRUE
SETGLOB 7

.macro _images
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 11
PUSHSLICE xc0000000000000000000000000bfa8ccdc
NEWC
STSLICE
PUSH S1
SWAP
STDICT
ENDC
PUSHINT 0
SENDRAWMSG
TRUE
SETGLOB 7

.macro _deployed
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 12
PUSHSLICE xc0000000000000000000000000a9fdf791
NEWC
STSLICE
PUSH S1
SWAP
STDICT
ENDC
PUSHINT 0
SENDRAWMSG
TRUE
SETGLOB 7

.macro public_function_selector
DUP
PUSHINT 460646377
LEQ
PUSHCONT {
	DUP
	PUSHINT 314494412
	EQUAL
	IFJMPREF {
		CALL $setOwnerKeys$
	}
	DUP
	PUSHINT 388172858
	EQUAL
	IFJMPREF {
		CALL $upgrade$
	}
	DUP
	PUSHINT 460646377
	EQUAL
	IFJMPREF {
		CALL $updateImage$
	}
}
IFJMP
DUP
PUSHINT 1015628722
LEQ
PUSHCONT {
	DUP
	PUSHINT 704509841
	EQUAL
	IFJMPREF {
		CALL $_deployed$
	}
	DUP
	PUSHINT 817967675
	EQUAL
	IFJMPREF {
		CALL $onDeploy$
	}
	DUP
	PUSHINT 1015628722
	EQUAL
	IFJMPREF {
		CALL $_ownerKeys$
	}
}
IFJMP
DUP
PUSHINT 1756716863
LEQ
PUSHCONT {
	DUP
	PUSHINT 1021122136
	EQUAL
	IFJMPREF {
		CALL $deploy$
	}
	DUP
	PUSHINT 1068027100
	EQUAL
	IFJMPREF {
		CALL $_images$
	}
	DUP
	PUSHINT 1756716863
	EQUAL
	IFJMPREF {
		CALL $constructor$
	}
}
IFJMP
