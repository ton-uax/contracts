.macro constructor
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
;; constructor protection
GETGLOB 6
THROWIF 51
PUSHINT 1
SETGLOB 6
;; end constructor protection
; Decode input parameters
ENDS
; modifier accept
ACCEPT
; constructor Console
; expValue
; end expValue
;; get member sender
GETGLOB 9
; colValue
; end colValue
;; Remote call IRoot.onDeploy
;; push identifier _repo
DUP
SETGLOB 20
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x411e1a30000000000000000000000000000061826477_
STSLICER
;; id
PUSHINT 10
STUR 16
ENDC
PUSHINT 0
SENDRAWMSG
; end constructor Console
; end modifier accept
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro initConsole
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode eventLog
LDMSGADDR
; Decode root
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode medium
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode logLevel
LDUQ 16
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 16
}
IFNOT
ENDS
;; param: eventLog
;; param: root
;; param: medium
;; param: logLevel
; modifier accept
ACCEPT
; function initConsole
; expValue
; end expValue
PUSHINT 10
; colValue
SETGLOB 11
; end colValue
MYADDR
;; decl: console
;; push identifier console
DUP
;; push identifier eventLog
;; push identifier root
;; push identifier medium
;; push identifier logLevel
BLKPUSH 4, 5
CALLREF {
	CALL $_setEnv_internal_macro$
}
;; Remote call Base.initMember
;; push identifier eventLog
PUSH S4
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x405f5e100000000000000000000000000003_
STSLICER
NEWC
STSLICECONST x258a5d6f
;; id
PUSHINT 20
STUR 16
;; console
;; push identifier console
PUSH S2
STSLICER
;; eventLog
;; push identifier eventLog
PUSH S6
STSLICER
;; root
;; push identifier root
PUSH S5
STSLICER
NEWC
;; medium
;; push identifier medium
PUSH S5
STSLICER
;; logLevel
;; push identifier logLevel
PUSH S4
STUR 16
STBREFR
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
;; Remote call Base.initMember
;; push identifier root
PUSH S3
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x405f5e100000000000000000000000000003_
STSLICER
NEWC
STSLICECONST x258a5d6f
;; id
PUSHINT 30
STUR 16
;; console
;; push identifier console
PUSH S2
STSLICER
;; eventLog
;; push identifier eventLog
PUSH S6
STSLICER
;; root
;; push identifier root
PUSH S5
STSLICER
NEWC
;; medium
;; push identifier medium
PUSH S5
STSLICER
;; logLevel
;; push identifier logLevel
PUSH S4
STUR 16
STBREFR
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
;; Remote call Base.initMember
;; push identifier medium
PUSH S2
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x405f5e100000000000000000000000000003_
STSLICER
NEWC
STSLICECONST x258a5d6f
;; id
PUSHINT 40
STUR 16
;; console
;; push identifier console
PUSH S2
STSLICER
;; eventLog
;; push identifier eventLog
PUSH S6
STSLICER
;; root
;; push identifier root
PUSH S5
STSLICER
NEWC
;; medium
;; push identifier medium
PUSH S5
STSLICER
;; logLevel
;; push identifier logLevel
PUSH S4
STUR 16
STBREFR
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
; end function initConsole
; end modifier accept
BLKDROP 5
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro deployTokenWallets
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode n
LDU 16
ENDS
;; param: n
; modifier accept
ACCEPT
; function deployTokenWallets
;; Remote call IRoot.deployTokenWallets
;; push identifier _root
GETGLOB 14
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x411e1a300000000000000000000000000000e4d64c4d_
STSLICER
;; k
;; push identifier n
PUSH S1
STUR 16
ENDC
PUSHINT 0
SENDRAWMSG
; end function deployTokenWallets
; end modifier accept
DROP
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro deployTokenWalletsWithKeys
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode keys
LDU 32
LDDICT
ROTREV
PAIR
SWAP
ENDS
;; param: keys
; modifier accept
ACCEPT
; function deployTokenWalletsWithKeys
;; Remote call IRoot.deployTokenWalletsWithKeys
;; push identifier _root
GETGLOB 14
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x411e1a30000000000000000000000000000061bf82f1_
STSLICER
;; keys
;; push identifier keys
PUSH S1
UNPAIR
XCHG s2
STU 32
STDICT
ENDC
PUSHINT 0
SENDRAWMSG
; end function deployTokenWalletsWithKeys
; end modifier accept
DROP
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro deployOwners
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
; modifier accept
ACCEPT
; function deployOwners
;; Remote call IRoot.deployOwners
;; push identifier _root
GETGLOB 14
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x411e1a3000000000000000000000000000008acb95c5_
STSLICER
ENDC
PUSHINT 0
SENDRAWMSG
; end function deployOwners
; end modifier accept
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro doTransfer
DROP
; Decode input parameters
; Decode from
LDMSGADDR
; Decode to
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode val
LDUQ 32
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 32
}
IFNOT
ENDS
;; param: from
;; param: to
;; param: val
; modifier accept
ACCEPT
; function doTransfer
;; Remote call ITokenWallet.transferTokens
;; push identifier from
PUSH S2
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x402625a000000000000000000000000000003c8da031_
STSLICER
;; to
;; push identifier to
PUSH S2
STSLICER
;; val
;; push identifier val
PUSH S1
STUR 32
ENDC
PUSHINT 0
SENDRAWMSG
; end function doTransfer
; end modifier accept
BLKDROP 3
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro setRefillOptions
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode initialBalance
LDU 64
; Decode warnBalance
LDU 64
; Decode refillValue
LDU 64
; Decode updateTimeout
LDU 32
ENDS
;; param: initialBalance
;; param: warnBalance
;; param: refillValue
;; param: updateTimeout
; modifier accept
ACCEPT
; function setRefillOptions
;; Remote call IRoot.updateRefillConfig
;; push identifier _root
GETGLOB 14
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x402625a000000000000000000000000000003bd16451_
STSLICER
;; initialBalance
;; push identifier initialBalance
PUSH S4
STUR 64
;; warnBalance
;; push identifier warnBalance
PUSH S3
STUR 64
;; refillValue
;; push identifier refillValue
PUSH S2
STUR 64
;; updateTimeout
;; push identifier updateTimeout
PUSH S1
STUR 32
ENDC
PUSHINT 0
SENDRAWMSG
; end function setRefillOptions
; end modifier accept
BLKDROP 4
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro setEnv2
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode console
LDMSGADDR
; Decode eventLog
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode root
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode medium
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode logLevel
LDUQ 16
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 16
}
IFNOT
ENDS
;; param: console
;; param: eventLog
;; param: root
;; param: medium
;; param: logLevel
; modifier accept
ACCEPT
; function setEnv2
;; Remote call IRoot.setEnv
;; push identifier _root
GETGLOB 14
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x405f5e100000000000000000000000000003_
STSLICER
NEWC
STSLICECONST x53025453
;; console
;; push identifier console
PUSH S6
STSLICER
;; eventLog
;; push identifier eventLog
PUSH S5
STSLICER
;; root
;; push identifier root
PUSH S4
STSLICER
NEWC
;; medium
;; push identifier medium
PUSH S4
STSLICER
;; logLevel
;; push identifier logLevel
PUSH S3
STUR 16
STBREFR
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
; end function setEnv2
; end modifier accept
BLKDROP 5
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro updateWalletsEnv
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
; modifier accept
ACCEPT
; function updateWalletsEnv
;; Remote call IRoot.updateWalletsEnv
;; push identifier _root
GETGLOB 14
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x405f5e1000000000000000000000000000006be7cf97_
STSLICER
ENDC
PUSHINT 0
SENDRAWMSG
; end function updateWalletsEnv
; end modifier accept
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro updateSystemEnv
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
; modifier accept
ACCEPT
; function updateSystemEnv
;; Remote call IRoot.updateSystemEnv
;; push identifier _root
GETGLOB 14
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x405f5e1000000000000000000000000000006eeee1ff_
STSLICER
ENDC
PUSHINT 0
SENDRAWMSG
; end function updateSystemEnv
; end modifier accept
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro registerOwners
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
; modifier accept
ACCEPT
; function registerOwners
;; Remote call IRoot.registerOwners
;; push identifier _root
GETGLOB 14
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x405f5e10000000000000000000000000000028becffd_
STSLICER
ENDC
PUSHINT 0
SENDRAWMSG
; end function registerOwners
; end modifier accept
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro setEnv
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode console
LDMSGADDR
; Decode eventLog
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode root
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode medium
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode logLevel
LDUQ 16
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 16
}
IFNOT
ENDS
;; param: console
;; param: eventLog
;; param: root
;; param: medium
;; param: logLevel
; modifier accept
ACCEPT
; function setEnv
;; push identifier console
;; push identifier eventLog
;; push identifier root
;; push identifier medium
;; push identifier logLevel
BLKPUSH 5, 4
CALLREF {
	CALL $_setEnv_internal_macro$
}
;; Remote call Base.updateEnv
;; push identifier console
PUSH S4
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x405f5e100000000000000000000000000003_
STSLICER
NEWC
STSLICECONST x5bba736f
;; console
;; push identifier console
PUSH S6
STSLICER
;; eventLog
;; push identifier eventLog
PUSH S5
STSLICER
;; root
;; push identifier root
PUSH S4
STSLICER
NEWC
;; medium
;; push identifier medium
PUSH S4
STSLICER
;; logLevel
;; push identifier logLevel
PUSH S3
STUR 16
STBREFR
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
;; Remote call Base.updateEnv
;; push identifier eventLog
PUSH S3
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x405f5e100000000000000000000000000003_
STSLICER
NEWC
STSLICECONST x5bba736f
;; console
;; push identifier console
PUSH S6
STSLICER
;; eventLog
;; push identifier eventLog
PUSH S5
STSLICER
;; root
;; push identifier root
PUSH S4
STSLICER
NEWC
;; medium
;; push identifier medium
PUSH S4
STSLICER
;; logLevel
;; push identifier logLevel
PUSH S3
STUR 16
STBREFR
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
;; Remote call Base.updateEnv
;; push identifier root
PUSH S2
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x405f5e100000000000000000000000000003_
STSLICER
NEWC
STSLICECONST x5bba736f
;; console
;; push identifier console
PUSH S6
STSLICER
;; eventLog
;; push identifier eventLog
PUSH S5
STSLICER
;; root
;; push identifier root
PUSH S4
STSLICER
NEWC
;; medium
;; push identifier medium
PUSH S4
STSLICER
;; logLevel
;; push identifier logLevel
PUSH S3
STUR 16
STBREFR
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
;; Remote call Base.updateEnv
;; push identifier medium
PUSH S1
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x405f5e100000000000000000000000000003_
STSLICER
NEWC
STSLICECONST x5bba736f
;; console
;; push identifier console
PUSH S6
STSLICER
;; eventLog
;; push identifier eventLog
PUSH S5
STSLICER
;; root
;; push identifier root
PUSH S4
STSLICER
NEWC
;; medium
;; push identifier medium
PUSH S4
STSLICER
;; logLevel
;; push identifier logLevel
PUSH S3
STUR 16
STBREFR
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
;; Remote call IRoot.updateWalletsEnv
;; push identifier root
PUSH S2
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x411e1a3000000000000000000000000000006be7cf97_
STSLICER
ENDC
PUSHINT 0
SENDRAWMSG
; end function setEnv
; end modifier accept
BLKDROP 5
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro shuffle
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
; modifier accept
ACCEPT
; function shuffle
;; Remote call IRoot.onDeploy
;; push identifier _root
GETGLOB 14
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x405f5e10000000000000000000000000000061826477_
STSLICER
;; id
PUSHINT 10
STUR 16
ENDC
PUSHINT 0
SENDRAWMSG
; end function shuffle
; end modifier accept
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro approve
DROP
; Decode input parameters
; Decode addr
LDMSGADDR
; Decode eventID
LDU 32
ENDS
;; param: addr
;; param: eventID
; modifier accept
ACCEPT
; function approve
;; Remote call IOwnerWallet.approve
;; push identifier addr
PUSH S1
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x402625a0000000000000000000000000000037a4574b_
STSLICER
;; id
;; push identifier eventID
PUSH S1
STUR 32
ENDC
PUSHINT 0
SENDRAWMSG
; end function approve
; end modifier accept
DROP2
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro reject
DROP
; Decode input parameters
; Decode addr
LDMSGADDR
; Decode eventID
LDU 32
ENDS
;; param: addr
;; param: eventID
; modifier accept
ACCEPT
; function reject
;; Remote call IOwnerWallet.reject
;; push identifier addr
PUSH S1
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x402625a00000000000000000000000000000ae5e8165_
STSLICER
;; id
;; push identifier eventID
PUSH S1
STUR 32
ENDC
PUSHINT 0
SENDRAWMSG
; end function reject
; end modifier accept
DROP2
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro propose
DROP
; Decode input parameters
; Decode addr
LDMSGADDR
; Decode eType
LDU 8
; Decode value
LDU 32
ENDS
;; param: addr
;; param: eType
;; param: value
; modifier accept
ACCEPT
; function propose
;; Remote call IOwnerWallet.propose
;; push identifier addr
PUSH S2
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x402625a000000000000000000000000000008f14006d_
STSLICER
;; eType
;; push identifier eType
PUSH S2
STUR 8
;; value
;; push identifier value
PUSH S1
STUR 32
ENDC
PUSHINT 0
SENDRAWMSG
; end function propose
; end modifier accept
BLKDROP 3
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro upgrade
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode c
;; decode TvmCell
LDREF
ENDS
;; param: c
; function upgrade
;; push identifier c
DUP
CTOS
LDREF
; colValue
DROP
;; decl: newcode
ACCEPT
CALLREF {
	CALL $c7_to_c4$
}
COMMIT
;; push identifier newcode
DUP
SETCODE
;; push identifier newcode
DUP
CTOS
PLDREF
CTOS
BLESS
POP c3
CALLREF {
	CALL $:onCodeUpgrade$
}
; end function upgrade
DROP2
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.internal-alias :onCodeUpgrade, 2
.internal :onCodeUpgrade
; function onCodeUpgrade
;; set default state vars
PUSHINT 0
SETGLOB 10
PUSHINT 0
SETGLOB 11
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 12
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 13
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 14
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 15
PUSHINT 0
SETGLOB 16
PUSHINT 0
SETGLOB 17
PUSHINT 0
SETGLOB 18
NEWDICT
SETGLOB 19
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 20
;; end set default state vars
; end function onCodeUpgrade
CALLREF {
	CALL $c7_to_c4$
}
COMMIT
THROW 0

.globl	_error_internal
.type	_error_internal, @function
CALL $_error_internal_macro$

.macro _error_internal_macro
;; param: id
;; param: code
; function _error
;; if
;; push identifier _logLevel
GETGLOB 16
;; &
PUSHINT 1
AND
GTINT 0
PUSHCONT {
	;; Remote call IEventLog.logError
	;; push identifier _eventLog
	GETGLOB 13
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHSLICE x4017d7840000000000000000000000000000fa768efb_
	STSLICER
	;; id
	;; push identifier id
	PUSH S2
	STUR 16
	;; code
	;; push identifier code
	PUSH S1
	STUR 16
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
;; end if
; end function _error
DROP2

.globl	_checkTonBalance_internal
.type	_checkTonBalance_internal, @function
CALL $_checkTonBalance_internal_macro$

.macro _checkTonBalance_internal_macro
; function _checkTonBalance
;; get member balance
GETPARAM 7
INDEX 0
;; uint64
UFITS 64
;; decl: tonBalance
;; if
;; push identifier tonBalance
DUP
;; <
;; push identifier _warnBalance
GETGLOB 18
LESS
PUSHCONT {
	;; Remote call IRoot.updateTonBalance
	;; push identifier _root
	GETGLOB 14
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHSLICE x402625a00000000000000000000000000000e5f7ae0d_
	STSLICER
	;; id
	;; push identifier _id
	GETGLOB 11
	STUR 16
	;; tonBalance
	;; push identifier tonBalance
	PUSH S1
	STUR 64
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
;; end if
DROP
; end function _checkTonBalance

.macro initMember
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode id
LDU 16
; Decode console
LDMSGADDR
; Decode eventLog
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode root
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode medium
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode logLevel
LDUQ 16
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 16
}
IFNOT
ENDS
;; param: id
;; param: console
;; param: eventLog
;; param: root
;; param: medium
;; param: logLevel
; function initMember
; expValue
; end expValue
;; push identifier id
PUSH S5
; colValue
SETGLOB 11
; end colValue
;; push identifier console
;; push identifier eventLog
;; push identifier root
;; push identifier medium
;; push identifier logLevel
BLKPUSH 5, 4
CALLREF {
	CALL $_setEnv_internal_macro$
}
; end function initMember
BLKDROP 6
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	_setEnv_internal
.type	_setEnv_internal, @function
CALL $_setEnv_internal_macro$

.macro _setEnv_internal_macro
;; param: console
;; param: eventLog
;; param: root
;; param: medium
;; param: logLevel
; function _setEnv
; expValue
; end expValue
;; push identifier console
PUSH S4
; colValue
SETGLOB 12
; end colValue
; expValue
; end expValue
;; push identifier eventLog
PUSH S3
; colValue
SETGLOB 13
; end colValue
; expValue
; end expValue
;; push identifier root
PUSH S2
; colValue
SETGLOB 14
; end colValue
; expValue
; end expValue
;; push identifier medium
PUSH S1
; colValue
SETGLOB 15
; end colValue
; expValue
; end expValue
;; push identifier logLevel
DUP
; colValue
SETGLOB 16
; end colValue
; expValue
;; fetch _clients
;; push identifier console
PUSH S4
GETGLOB 19
; end expValue
PUSHINT 10
; colValue
NEWC
STU 16
ROTREV
PUSHINT 267
DICTSETB
; end colValue
; expValue
;; fetch _clients
DUP
SETGLOB 19
;; push identifier eventLog
PUSH S4
SWAP
; end expValue
PUSHINT 20
; colValue
NEWC
STU 16
ROTREV
PUSHINT 267
DICTSETB
; end colValue
; expValue
;; fetch _clients
DUP
SETGLOB 19
;; push identifier root
PUSH S3
SWAP
; end expValue
PUSHINT 30
; colValue
NEWC
STU 16
ROTREV
PUSHINT 267
DICTSETB
; end colValue
; expValue
;; fetch _clients
DUP
SETGLOB 19
;; push identifier medium
PUSH S2
SWAP
; end expValue
PUSHINT 40
; colValue
NEWC
STU 16
ROTREV
PUSHINT 267
DICTSETB
SETGLOB 19
; end colValue
; end function _setEnv
BLKDROP 5

.macro updateEnv
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode console
LDMSGADDR
; Decode eventLog
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode root
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode medium
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode logLevel
LDUQ 16
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 16
}
IFNOT
ENDS
;; param: console
;; param: eventLog
;; param: root
;; param: medium
;; param: logLevel
; function updateEnv
;; push identifier console
;; push identifier eventLog
;; push identifier root
;; push identifier medium
;; push identifier logLevel
BLKPUSH 5, 4
CALLREF {
	CALL $_setEnv_internal_macro$
}
; end function updateEnv
BLKDROP 5
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro getEnv
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
CALLREF {
	CALL $getEnv_internal_macro$
}
;; emitting 6 value(s)
PUSH S6
EQINT -1
PUSHCONT {
	PUSH S8
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 97
	STZEROES
	STSLICECONST 1
	NEWC
	STSLICECONST xb542a735
	PUSH S7
	STUR 16
	PUSH S6
	STSLICER
	PUSH S5
	STSLICER
	PUSH S4
	STSLICER
	NEWC
	PUSH S4
	STSLICER
	PUSH S3
	STUR 16
	STBREFR
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
BLKDROP 6
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getEnv_internal
.type	getEnv_internal, @function
CALL $getEnv_internal_macro$

.macro getEnv_internal_macro
;; ret param: id
PUSHINT 0
;; ret param: console
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: eventLog
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: root
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: medium
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: logLevel
PUSHINT 0
; function getEnv
;; return
;; push identifier _id
GETGLOB 11
;; push identifier _console
GETGLOB 12
;; push identifier _eventLog
GETGLOB 13
;; push identifier _root
GETGLOB 14
;; push identifier _medium
GETGLOB 15
;; push identifier _logLevel
GETGLOB 16
BLKDROP2 6, 6
; end function getEnv

.macro c7_to_c4
GETGLOB 2
NEWC
STU 256
GETGLOB 3
STUR 64
GETGLOB 6
STUR 1
NEWC
GETGLOB 14
GETGLOB 15
GETGLOB 18
GETGLOB 20
REVERSE 5, 0
STSLICE
STSLICE
STU 64
STSLICE
GETGLOB 10
GETGLOB 11
GETGLOB 12
GETGLOB 13
GETGLOB 16
GETGLOB 17
GETGLOB 19
REVERSE 9, 0
STBREF
STU 8
STU 16
STSLICE
STSLICE
STU 16
STU 8
STDICT
ENDC
POP C4

.macro c4_to_c7
PUSHROOT
CTOS        ; c4
LDU 256      ; pubkey c4
LDU 64      ; pubkey timestamp c4
LDU 1       ; pubkey [timestamp] constructor_flag memory
LDREFRTOS
LDMSGADDR
LDMSGADDR
LDU 64
SETGLOB 20
SETGLOB 18
SETGLOB 15
SETGLOB 14
LDU 8
LDU 16
LDMSGADDR
LDMSGADDR
LDU 16
LDU 8
PLDDICT
SETGLOB 19
SETGLOB 17
SETGLOB 16
SETGLOB 13
SETGLOB 12
SETGLOB 11
SETGLOB 10
TRUE
SETGLOB 1   ; pubkey [timestamp] constructor_flag
SETGLOB 6   ; pubkey [timestamp]
SETGLOB 3   ; D
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS        ; c4
DUP        ; c4 c4
SBITS      ; c4 bits
GTINT 1    ; c4 bits>1
PUSHCONT {
	LDU 256      ; pubkey c4
	LDU 64      ; pubkey timestamp c4
	LDU 1       ; pubkey [timestamp] constructor_flag memory
	LDREFRTOS
	LDMSGADDR
	LDMSGADDR
	LDU 64
	SETGLOB 20
	SETGLOB 18
	SETGLOB 15
	SETGLOB 14
	LDU 8
	LDU 16
	LDMSGADDR
	LDMSGADDR
	LDU 16
	LDU 8
	PLDDICT
	SETGLOB 19
	SETGLOB 17
	SETGLOB 16
	SETGLOB 13
	SETGLOB 12
	SETGLOB 11
	SETGLOB 10
	TRUE
	SETGLOB 1   ; pubkey [timestamp] constructor_flag
	SETGLOB 6   ; pubkey [timestamp]
	SETGLOB 3   ; D
	SETGLOB 2
}
PUSHCONT {
	PLDDICT   ; D
	; init _version
	PUSHINT 0
	SETGLOB 10
	; init _id
	PUSHINT 0
	SETGLOB 11
	; init _console
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 12
	; init _eventLog
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 13
	; init _root
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 14
	; init _medium
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 15
	; init _logLevel
	PUSHINT 0
	SETGLOB 16
	; init _transferFee
	PUSHINT 0
	SETGLOB 17
	; init _warnBalance
	PUSHINT 0
	SETGLOB 18
	; init _clients
	NEWDICT
	SETGLOB 19
	; init _repo
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 20
	; set contract pubkey
	PUSHINT 0
	SWAP
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
	PUSHINT 0 ; constructor_flag
	SETGLOB 6
	TRUE
	SETGLOB 1
	;; init state var: _version
	PUSHINT 30
	SETGLOB 10
	;; init state var: _transferFee
	PUSHINT 1
	SETGLOB 17
	;; init state var: _warnBalance
	PUSHINT 1990000000
	SETGLOB 18
}
IFELSE

.internal-alias :main_internal, 0
.internal :main_internal
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Function: main_internal
;; param: contract_balance
;; param: msg_balance
;; param: int_msg_info
;; param: msg_body_slice
;; param: transaction_type
PUSH S2
CTOS
LDU 4       ; bounced tail
LDMSGADDR   ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
IFRET
PUSH S1    ; body
SEMPTY     ; isEmpty
IFRET
PUSH S1 ; body
LDU 32  ; funcId body'
PUSH S1 ; funcId body' funcId
IFNOTRET
SWAP
CALLREF {
	CALL $public_function_selector$
}
GETGLOB 7
ISNULL
THROWIF 60

.internal-alias :main_external, -1
.internal :main_external
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 9
PUSH S1
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHINT 512
	LDSLICEX ; signatureSlice msgSlice
	DUP      ; signatureSlice msgSlice msgSlice
	HASHSU   ; signatureSlice msgSlice hashMsgSlice
	ROT
	GETGLOB 2
	CHKSIGNU      ; msgSlice isSigned
	THROWIFNOT 40 ; msgSlice
}
IF
LDU 64                         ; timestamp msgSlice
SWAP                           ; msgSlice timestamp
CALL $replay_protection_macro$ ; msgSlice
LDU  32 ; funcId body
SWAP    ; body funcId
CALLREF {
	CALL $public_function_selector$
}
GETGLOB 7
ISNULL
THROWIF 60

.macro _clients
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 19
PUSHSLICE xc0000000000000000000000000dccdc55c
NEWC
STSLICE
PUSH S1
SWAP
STDICT
ENDC
PUSHINT 0
SENDRAWMSG
TRUE
SETGLOB 7

.macro public_function_selector
DUP
PUSHINT 629824879
LEQ
PUSHCONT {
	DUP
	PUSHINT 173212713
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 21583531
		EQUAL
		IFJMPREF {
			CALL $approve$
		}
		DUP
		PUSHINT 173212713
		EQUAL
		IFJMPREF {
			CALL $setEnv2$
		}
	}
	IFJMP
	DUP
	PUSHINT 341796862
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 252541597
		EQUAL
		IFJMPREF {
			CALL $propose$
		}
		DUP
		PUSHINT 341796862
		EQUAL
		IFJMPREF {
			CALL $registerOwners$
		}
	}
	IFJMP
	DUP
	PUSHINT 629824879
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 388172858
		EQUAL
		IFJMPREF {
			CALL $upgrade$
		}
		DUP
		PUSHINT 629824879
		EQUAL
		IFJMPREF {
			CALL $initMember$
		}
	}
	IFJMP
}
IFJMP
DUP
PUSHINT 930574591
LEQ
PUSHCONT {
	DUP
	PUSHINT 845073461
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 723369133
		EQUAL
		IFJMPREF {
			CALL $shuffle$
		}
		DUP
		PUSHINT 845073461
		EQUAL
		IFJMPREF {
			CALL $initConsole$
		}
	}
	IFJMP
	DUP
	PUSHINT 905177035
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 893560629
		EQUAL
		IFJMPREF {
			CALL $getEnv$
		}
		DUP
		PUSHINT 905177035
		EQUAL
		IFJMPREF {
			CALL $updateWalletsEnv$
		}
	}
	IFJMP
	DUP
	PUSHINT 930574591
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 924083814
		EQUAL
		IFJMPREF {
			CALL $deployTokenWalletsWithKeys$
		}
		DUP
		PUSHINT 930574591
		EQUAL
		IFJMPREF {
			CALL $updateSystemEnv$
		}
	}
	IFJMP
}
IFJMP
DUP
PUSHINT 1609228032
LEQ
PUSHCONT {
	DUP
	PUSHINT 1246984946
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 1164298978
		EQUAL
		IFJMPREF {
			CALL $deployOwners$
		}
		DUP
		PUSHINT 1246984946
		EQUAL
		IFJMPREF {
			CALL $doTransfer$
		}
	}
	IFJMP
	DUP
	PUSHINT 1538945903
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 1392661587
		EQUAL
		IFJMPREF {
			CALL $setEnv$
		}
		DUP
		PUSHINT 1538945903
		EQUAL
		IFJMPREF {
			CALL $updateEnv$
		}
	}
	IFJMP
	DUP
	PUSHINT 1609228032
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 1556989276
		EQUAL
		IFJMPREF {
			CALL $_clients$
		}
		DUP
		PUSHINT 1609228032
		EQUAL
		IFJMPREF {
			CALL $reject$
		}
	}
	IFJMP
}
IFJMP
DUP
PUSHINT 1919624742
LEQ
PUSHCONT {
	DUP
	PUSHINT 1756716863
	EQUAL
	IFJMPREF {
		CALL $constructor$
	}
	DUP
	PUSHINT 1870127689
	EQUAL
	IFJMPREF {
		CALL $setRefillOptions$
	}
	DUP
	PUSHINT 1919624742
	EQUAL
	IFJMPREF {
		CALL $deployTokenWallets$
	}
}
IFJMP
