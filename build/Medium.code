.macro constructor
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
;; constructor protection
GETGLOB 6
THROWIF 51
PUSHINT 1
SETGLOB 6
;; end constructor protection
ENDS
ACCEPT
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	_logRecord_internal
.type	_logRecord_internal, @function
CALL $_logRecord_internal_macro$

.macro _logRecord_internal_macro
;; param: value
; function _logRecord
;; if
;; push identifier _logLevel
GETGLOB 17
;; &
PUSHINT 4
AND
GTINT 0
PUSHCONT {
	;; Remote call IEventLog.logRecord
	;; push identifier _eventLog
	GETGLOB 13
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHSLICE x4017d78400000000000000000000000000004268cd55_
	STSLICER
	;; id
	;; push identifier _id
	GETGLOB 11
	STUR 16
	;; val
	;; push identifier value
	PUSH S1
	STIR 32
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
;; end if
; end function _logRecord
DROP

.globl	_logEvent_internal
.type	_logEvent_internal, @function
CALL $_logEvent_internal_macro$

.macro _logEvent_internal_macro
;; param: id
;; param: et
;; param: es
; function _logEvent
;; if
;; push identifier _logLevel
GETGLOB 17
;; &
PUSHINT 2
AND
GTINT 0
PUSHCONT {
	;; Remote call IEventLog.logEvent
	;; push identifier _eventLog
	GETGLOB 13
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHSLICE x4017d7840000000000000000000000000000b0c6d911_
	STSLICER
	;; id
	;; push identifier id
	PUSH S3
	STUR 16
	;; eType
	;; push identifier et
	PUSH S2
	STUR 8
	;; s
	;; push identifier es
	PUSH S1
	STUR 8
	;; eventID
	;; push identifier _eventCount
	GETGLOB 26
	STUR 32
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
;; end if
; end function _logEvent
BLKDROP 3

.globl	_logTransfer_internal
.type	_logTransfer_internal, @function
CALL $_logTransfer_internal_macro$

.macro _logTransfer_internal_macro
;; param: from
;; param: to
;; param: val
; function _logTransfer
;; if
;; push identifier _logLevel
GETGLOB 17
;; &
PUSHINT 16
AND
GTINT 0
PUSHCONT {
	;; Remote call IEventLog.logTransfer
	;; push identifier _eventLog
	GETGLOB 13
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHSLICE x4017d78400000000000000000000000000008d63aef5_
	STSLICER
	;; id
	;; push identifier _transferCount
	GETGLOB 21
	STUR 32
	;; from
	;; push identifier from
	PUSH S3
	STUR 16
	;; to
	;; push identifier to
	PUSH S2
	STUR 16
	;; val
	;; push identifier val
	PUSH S1
	STUR 32
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
;; end if
; end function _logTransfer
BLKDROP 3

.macro registerTokenWallet
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode id
LDU 16
; Decode a
LDMSGADDR
ENDS
;; param: id
;; param: a
; function registerTokenWallet
;; push identifier id
;; push identifier a
DUP2
;; param: id
;; param: a
; function _addClient
; expValue
;; fetch _clients
;; push identifier a
DUP
GETGLOB 20
; end expValue
;; push identifier id
PUSH S3
; colValue
NEWC
STU 16
ROTREV
PUSHINT 267
DICTSETB
SETGLOB 20
; end colValue
;; Remote call IEventLog.meet
;; push identifier _eventLog
GETGLOB 13
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x402625a00000000000000000000000000000697817b1_
STSLICER
;; id
;; push identifier id
PUSH S2
STUR 16
;; a
;; push identifier a
PUSH S1
STSLICER
ENDC
PUSHINT 0
SENDRAWMSG
;; get member addr
;; index
;; push identifier id
PUSH S1
;; push identifier _ledger
PUSHINT 32
GETGLOBVAR
PUSHINT 16
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 32
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 32
	STZEROES
	ENDC
	CTOS
}
IFNOT
LDSLICE 32
NIP
LDMSGADDR
DROP
;; decl: addr
;; if
;; get member value
;; push identifier addr
DUP
PARSEMSGADDR
INDEX 3
PLDU 256
EQINT 0
PUSHCONT {
	PUSHINT 0
	;; push identifier a
	PUSH S2
	;; push identifier now
	NOW
	;; uint32
	TUPLE 3
	; expValue
	;; fetch _ledger
	PUSHINT 32
	GETGLOBVAR
	;; push identifier id
	PUSH S4
	SWAP
	; end expValue
	ROT
	; colValue
	UNTUPLE 3
	XCHG s2
	NEWC
	STU 32
	STSLICE
	STU 32
	ROTREV
	PUSHINT 16
	DICTUSETB
	PUSHINT 32
	SETGLOBVAR
	; end colValue
	;; ++
	; expValue
	;; fetch _walletCount
	GETGLOB 22
	; end expValue
	INC
	UFITS 32
	; colValue
	SETGLOB 22
	; end colValue
}
PUSHCONT {
	;; if
	;; push identifier addr
	;; push identifier a
	PUSH2 S0, S1
	SDEQ
	NOT
	PUSHCONT {
		;; push identifier id
		PUSH S2
		PUSHINT 208
		CALLREF {
			CALL $_error_internal_macro$
		}
	}
	PUSHCONT {
		;; if
		;; push identifier _logLevel
		GETGLOB 17
		;; &
		PUSHINT 8
		AND
		GTINT 0
		PUSHCONT {
			;; Remote call IEventLog.logDeploy
			;; push identifier _eventLog
			GETGLOB 13
			NEWC
			STSLICECONST x62_
			STSLICE
			PUSHSLICE x4017d784000000000000000000000000000006b47acd_
			STSLICER
			;; id
			;; push identifier id
			PUSH S3
			STUR 16
			;; s
			;; get member Approved
			PUSHINT 3
			STUR 8
			ENDC
			PUSHINT 0
			SENDRAWMSG
		}
		IF
		;; end if
	}
	IFELSE
	;; end if
}
IFELSE
;; end if
; end function _addClient
BLKDROP 3
;; if
;; push identifier _logLevel
GETGLOB 17
;; &
PUSHINT 8
AND
GTINT 0
PUSHCONT {
	;; Remote call IEventLog.logDeploy
	;; push identifier _eventLog
	GETGLOB 13
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHSLICE x4017d784000000000000000000000000000006b47acd_
	STSLICER
	;; id
	;; push identifier id
	PUSH S2
	STUR 16
	;; s
	;; get member Committed
	PUSHINT 5
	STUR 8
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
;; end if
; end function registerTokenWallet
DROP2
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro registerOwner
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode ownerId
LDU 8
; Decode id
LDU 16
; Decode a
LDMSGADDR
; Decode tid
LDU 16
; Decode ta
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: ownerId
;; param: id
;; param: a
;; param: tid
;; param: ta
; function registerOwner
;; if
;; push identifier id
PUSH S3
;; >=
PUSHINT 1
GEQ
;; short-circuiting &&
DUP
PUSHCONT {
	DROP
	;; push identifier id
	PUSH S3
	LESSINT 10
}
IF
PUSHCONT {
	;; push identifier id
	;; push identifier tid
	;; push identifier a
	PUSH3 S3, S1, S2
	;; push identifier ta
	PUSH S3
	;; push identifier now
	NOW
	;; uint32
	TUPLE 5
	; expValue
	;; fetch _owners
	PUSHINT 33
	GETGLOBVAR
	;; push identifier ownerId
	PUSH S6
	SWAP
	; end expValue
	ROT
	; colValue
	UNTUPLE 5
	REVERSE 5, 0
	NEWC
	STU 16
	STU 16
	STSLICE
	STSLICE
	STU 32
	ROTREV
	PUSHINT 8
	DICTUSETB
	PUSHINT 33
	SETGLOBVAR
	; end colValue
	;; ++
	; expValue
	;; fetch _ownerCount
	GETGLOB 27
	; end expValue
	INC
	UFITS 8
	; colValue
	SETGLOB 27
	; end colValue
	;; push identifier id
	;; push identifier a
	OVER2
	;; param: id
	;; param: a
	; function _addClient
	; expValue
	;; fetch _clients
	;; push identifier a
	DUP
	GETGLOB 20
	; end expValue
	;; push identifier id
	PUSH S3
	; colValue
	NEWC
	STU 16
	ROTREV
	PUSHINT 267
	DICTSETB
	SETGLOB 20
	; end colValue
	;; Remote call IEventLog.meet
	;; push identifier _eventLog
	GETGLOB 13
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHSLICE x402625a00000000000000000000000000000697817b1_
	STSLICER
	;; id
	;; push identifier id
	PUSH S2
	STUR 16
	;; a
	;; push identifier a
	PUSH S1
	STSLICER
	ENDC
	PUSHINT 0
	SENDRAWMSG
	;; get member addr
	;; index
	;; push identifier id
	PUSH S1
	;; push identifier _ledger
	PUSHINT 32
	GETGLOBVAR
	PUSHINT 16
	DICTUGET
	PUSHCONT {
		NEWC
		PUSHINT 32
		STZEROES
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		STSLICER
		PUSHINT 32
		STZEROES
		ENDC
		CTOS
	}
	IFNOT
	LDSLICE 32
	NIP
	LDMSGADDR
	DROP
	;; decl: addr
	;; if
	;; get member value
	;; push identifier addr
	DUP
	PARSEMSGADDR
	INDEX 3
	PLDU 256
	EQINT 0
	PUSHCONT {
		PUSHINT 0
		;; push identifier a
		PUSH S2
		;; push identifier now
		NOW
		;; uint32
		TUPLE 3
		; expValue
		;; fetch _ledger
		PUSHINT 32
		GETGLOBVAR
		;; push identifier id
		PUSH S4
		SWAP
		; end expValue
		ROT
		; colValue
		UNTUPLE 3
		XCHG s2
		NEWC
		STU 32
		STSLICE
		STU 32
		ROTREV
		PUSHINT 16
		DICTUSETB
		PUSHINT 32
		SETGLOBVAR
		; end colValue
		;; ++
		; expValue
		;; fetch _walletCount
		GETGLOB 22
		; end expValue
		INC
		UFITS 32
		; colValue
		SETGLOB 22
		; end colValue
	}
	PUSHCONT {
		;; if
		;; push identifier addr
		;; push identifier a
		PUSH2 S0, S1
		SDEQ
		NOT
		PUSHCONT {
			;; push identifier id
			PUSH S2
			PUSHINT 208
			CALLREF {
				CALL $_error_internal_macro$
			}
		}
		PUSHCONT {
			;; if
			;; push identifier _logLevel
			GETGLOB 17
			;; &
			PUSHINT 8
			AND
			GTINT 0
			PUSHCONT {
				;; Remote call IEventLog.logDeploy
				;; push identifier _eventLog
				GETGLOB 13
				NEWC
				STSLICECONST x62_
				STSLICE
				PUSHSLICE x4017d784000000000000000000000000000006b47acd_
				STSLICER
				;; id
				;; push identifier id
				PUSH S3
				STUR 16
				;; s
				;; get member Approved
				PUSHINT 3
				STUR 8
				ENDC
				PUSHINT 0
				SENDRAWMSG
			}
			IF
			;; end if
		}
		IFELSE
		;; end if
	}
	IFELSE
	;; end if
	; end function _addClient
	BLKDROP 3
	;; push identifier tid
	;; push identifier ta
	DUP2
	;; param: id
	;; param: a
	; function _addClient
	; expValue
	;; fetch _clients
	;; push identifier a
	DUP
	GETGLOB 20
	; end expValue
	;; push identifier id
	PUSH S3
	; colValue
	NEWC
	STU 16
	ROTREV
	PUSHINT 267
	DICTSETB
	SETGLOB 20
	; end colValue
	;; Remote call IEventLog.meet
	;; push identifier _eventLog
	GETGLOB 13
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHSLICE x402625a00000000000000000000000000000697817b1_
	STSLICER
	;; id
	;; push identifier id
	PUSH S2
	STUR 16
	;; a
	;; push identifier a
	PUSH S1
	STSLICER
	ENDC
	PUSHINT 0
	SENDRAWMSG
	;; get member addr
	;; index
	;; push identifier id
	PUSH S1
	;; push identifier _ledger
	PUSHINT 32
	GETGLOBVAR
	PUSHINT 16
	DICTUGET
	PUSHCONT {
		NEWC
		PUSHINT 32
		STZEROES
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		STSLICER
		PUSHINT 32
		STZEROES
		ENDC
		CTOS
	}
	IFNOT
	LDSLICE 32
	NIP
	LDMSGADDR
	DROP
	;; decl: addr
	;; if
	;; get member value
	;; push identifier addr
	DUP
	PARSEMSGADDR
	INDEX 3
	PLDU 256
	EQINT 0
	PUSHCONT {
		PUSHINT 0
		;; push identifier a
		PUSH S2
		;; push identifier now
		NOW
		;; uint32
		TUPLE 3
		; expValue
		;; fetch _ledger
		PUSHINT 32
		GETGLOBVAR
		;; push identifier id
		PUSH S4
		SWAP
		; end expValue
		ROT
		; colValue
		UNTUPLE 3
		XCHG s2
		NEWC
		STU 32
		STSLICE
		STU 32
		ROTREV
		PUSHINT 16
		DICTUSETB
		PUSHINT 32
		SETGLOBVAR
		; end colValue
		;; ++
		; expValue
		;; fetch _walletCount
		GETGLOB 22
		; end expValue
		INC
		UFITS 32
		; colValue
		SETGLOB 22
		; end colValue
	}
	PUSHCONT {
		;; if
		;; push identifier addr
		;; push identifier a
		PUSH2 S0, S1
		SDEQ
		NOT
		PUSHCONT {
			;; push identifier id
			PUSH S2
			PUSHINT 208
			CALLREF {
				CALL $_error_internal_macro$
			}
		}
		PUSHCONT {
			;; if
			;; push identifier _logLevel
			GETGLOB 17
			;; &
			PUSHINT 8
			AND
			GTINT 0
			PUSHCONT {
				;; Remote call IEventLog.logDeploy
				;; push identifier _eventLog
				GETGLOB 13
				NEWC
				STSLICECONST x62_
				STSLICE
				PUSHSLICE x4017d784000000000000000000000000000006b47acd_
				STSLICER
				;; id
				;; push identifier id
				PUSH S3
				STUR 16
				;; s
				;; get member Approved
				PUSHINT 3
				STUR 8
				ENDC
				PUSHINT 0
				SENDRAWMSG
			}
			IF
			;; end if
		}
		IFELSE
		;; end if
	}
	IFELSE
	;; end if
	; end function _addClient
	BLKDROP 3
}
IF
;; end if
; end function registerOwner
BLKDROP 5
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	_gain_internal
.type	_gain_internal, @function
CALL $_gain_internal_macro$

.macro _gain_internal_macro
;; param: val
; function _gain
;; push identifier val
DUP
; expValue
;; fetch _ledger
PUSHINT 32
GETGLOBVAR
PUSHINT 40
SWAP
DUP2
PUSHINT 16
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 32
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 32
	STZEROES
	ENDC
	CTOS
}
IFNOT
LDU 32
SWAP
; end expValue
BLKSWAP 1, 4
ADD
UFITS 32
; colValue
NEWC
STU 32
STSLICE
ROTREV
PUSHINT 16
DICTUSETB
PUSHINT 32
SETGLOBVAR
; end colValue
;; if
;; push identifier _logLevel
GETGLOB 17
;; &
PUSHINT 4
AND
GTINT 0
PUSHCONT {
	;; push identifier val
	DUP
	;; int32
	FITS 32
	CALLREF {
		CALL $_logRecord_internal_macro$
	}
}
IF
;; end if
; end function _gain
DROP

.globl	_lose_internal
.type	_lose_internal, @function
CALL $_lose_internal_macro$

.macro _lose_internal_macro
;; param: val
; function _lose
;; if
;; get member balance
;; index
PUSHINT 40
;; push identifier _ledger
PUSHINT 32
GETGLOBVAR
PUSHINT 16
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 32
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 32
	STZEROES
	ENDC
	CTOS
}
IFNOT
PLDU 32
;; <
;; push identifier val
PUSH S1
LESS
PUSHCONT {
	;; push identifier _id
	GETGLOB 11
	PUSHINT 217
	CALLREF {
		CALL $_error_internal_macro$
	}
}
PUSHCONT {
	;; push identifier val
	DUP
	; expValue
	;; fetch _ledger
	PUSHINT 32
	GETGLOBVAR
	PUSHINT 40
	SWAP
	DUP2
	PUSHINT 16
	DICTUGET
	PUSHCONT {
		NEWC
		PUSHINT 32
		STZEROES
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		STSLICER
		PUSHINT 32
		STZEROES
		ENDC
		CTOS
	}
	IFNOT
	LDU 32
	SWAP
	; end expValue
	BLKSWAP 1, 4
	SUB
	UFITS 32
	; colValue
	NEWC
	STU 32
	STSLICE
	ROTREV
	PUSHINT 16
	DICTUSETB
	PUSHINT 32
	SETGLOBVAR
	; end colValue
}
IFELSE
;; end if
;; if
;; push identifier _logLevel
GETGLOB 17
;; &
PUSHINT 4
AND
GTINT 0
PUSHCONT {
	;; -
	;; push identifier val
	DUP
	NEGATE
	;; int32
	FITS 32
	CALLREF {
		CALL $_logRecord_internal_macro$
	}
}
IF
;; end if
; end function _lose
DROP

.globl	_checkTransfer_internal
.type	_checkTransfer_internal, @function
CALL $_checkTransfer_internal_macro$

.macro _checkTransfer_internal_macro
;; param: afrom
;; param: ato
;; param: val
; function _checkTransfer
ACCEPT
;; index
;; push identifier afrom
PUSH S2
;; push identifier _clients
GETGLOB 20
PUSHINT 267
DICTGET
PUSHCONT {
	PLDU 16
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
;; decl: idfrom
;; index
;; push identifier ato
PUSH S2
;; push identifier _clients
GETGLOB 20
PUSHINT 267
DICTGET
PUSHCONT {
	PLDU 16
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
;; decl: idto
;; if
;; push identifier idfrom
PUSH S1
PUSHCONT {
	;; push identifier idfrom
	PUSH S1
	PUSHINT 230
	CALLREF {
		CALL $_error_internal_macro$
	}
}
IFNOT
;; end if
;; if
;; push identifier idto
DUP
PUSHCONT {
	;; push identifier idto
	DUP
	PUSHINT 231
	CALLREF {
		CALL $_error_internal_macro$
	}
}
IFNOT
;; end if
;; return
;; push identifier idfrom
;; push identifier idto
DUP2
;; push identifier val
PUSH S4
CALLREF {
	CALL $_transfer1_internal_macro$
}
; end function _checkTransfer
BLKDROP2 5, 1

.globl	_transfer1_internal
.type	_transfer1_internal, @function
CALL $_transfer1_internal_macro$

.macro _transfer1_internal_macro
;; param: from
;; param: to
;; param: val
;; ret param: retParam@0
PUSHINT 0
; function _transfer1
PUSHCONT {
	;; ++
	; expValue
	;; fetch _transferCount
	GETGLOB 21
	; end expValue
	INC
	UFITS 32
	; colValue
	SETGLOB 21
	; end colValue
	;; push identifier from
	PUSH S3
	;; >=
	PUSHINT 10000
	GEQ
	PUSHCONT {
		;; push identifier val
		PUSH S1
		;; +
		;; push identifier _transferFee
		GETGLOB 18
		ADD
		UFITS 32
	}
	PUSHCONT {
		;; push identifier val
		PUSH S1
	}
	IFELSE
	;; decl: total
	;; if
	;; get member balance
	;; index
	;; push identifier from
	PUSH S4
	;; push identifier _ledger
	PUSHINT 32
	GETGLOBVAR
	PUSHINT 16
	DICTUGET
	PUSHCONT {
		NEWC
		PUSHINT 32
		STZEROES
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		STSLICER
		PUSHINT 32
		STZEROES
		ENDC
		CTOS
	}
	IFNOT
	PLDU 32
	;; <
	;; push identifier total
	PUSH S1
	LESS
	PUSHCONT {
		;; push identifier from
		PUSH S4
		PUSHINT 215
		CALLREF {
			CALL $_error_internal_macro$
		}
		;; return
		PUSHINT 0
		BLKDROP2 1, 2
		SWAP
		DROP
	}
	IFJMP
	;; end if
	;; if
	;; push identifier from
	PUSH S4
	;; >=
	PUSHINT 10000
	GEQ
	PUSHCONT {
		;; push identifier _transferFee
		; expValue
		;; fetch _accruedFee
		; end expValue
		GETGLOB 24
		GETGLOB 18
		ADD
		UFITS 32
		; colValue
		SETGLOB 24
		; end colValue
	}
	IF
	;; end if
	;; push identifier total
	DUP
	; expValue
	;; fetch _ledger
	PUSHINT 32
	GETGLOBVAR
	;; push identifier from
	PUSH S6
	SWAP
	DUP2
	PUSHINT 16
	DICTUGET
	PUSHCONT {
		NEWC
		PUSHINT 32
		STZEROES
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		STSLICER
		PUSHINT 32
		STZEROES
		ENDC
		CTOS
	}
	IFNOT
	LDU 32
	SWAP
	; end expValue
	BLKSWAP 1, 4
	SUB
	UFITS 32
	; colValue
	NEWC
	STU 32
	STSLICE
	ROTREV
	PUSHINT 16
	DICTUSETB
	PUSHINT 32
	SETGLOBVAR
	; end colValue
	;; push identifier val
	PUSH S2
	; expValue
	;; fetch _ledger
	PUSHINT 32
	GETGLOBVAR
	;; push identifier to
	PUSH S5
	SWAP
	DUP2
	PUSHINT 16
	DICTUGET
	PUSHCONT {
		NEWC
		PUSHINT 32
		STZEROES
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		STSLICER
		PUSHINT 32
		STZEROES
		ENDC
		CTOS
	}
	IFNOT
	LDU 32
	SWAP
	; end expValue
	BLKSWAP 1, 4
	ADD
	UFITS 32
	; colValue
	NEWC
	STU 32
	STSLICE
	ROTREV
	PUSHINT 16
	DICTUSETB
	PUSHINT 32
	SETGLOBVAR
	; end colValue
	;; if
	;; push identifier _logLevel
	GETGLOB 17
	;; &
	PUSHINT 16
	AND
	GTINT 0
	PUSHCONT {
		;; push identifier from
		;; push identifier to
		;; push identifier val
		BLKPUSH 3, 4
		CALLREF {
			CALL $_logTransfer_internal_macro$
		}
	}
	IF
	;; end if
	;; return
	;; push identifier total
	DUP
	BLKDROP2 1, 2
	SWAP
	DROP
}
CALLX
; end function _transfer1
BLKDROP2 3, 1

.macro requestTransfer
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode to
LDMSGADDR
; Decode val
LDU 32
ENDS
;; param: to
;; param: val
; function requestTransfer
;; get member sender
GETGLOB 9
;; push identifier to
;; push identifier val
BLKPUSH 2, 2
CALLREF {
	CALL $_checkTransfer_internal_macro$
}
;; decl: total
;; if
;; push identifier total
DUP
EQINT 0
PUSHCONT {
}
PUSHCONT {
	;; Remote call ITokenWallet.debit
	;; get member sender
	GETGLOB 9
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHSLICE x402625a00000000000000000000000000000f916bfd9_
	STSLICER
	;; val
	;; push identifier total
	PUSH S1
	STUR 32
	ENDC
	PUSHINT 0
	SENDRAWMSG
	;; Remote call ITokenWallet.credit
	;; push identifier to
	PUSH S2
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHSLICE x402625a000000000000000000000000000007f43eceb_
	STSLICER
	;; val
	;; push identifier val
	PUSH S2
	STUR 32
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IFELSE
;; end if
; end function requestTransfer
BLKDROP 3
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro processTransfer
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode to
LDMSGADDR
; Decode val
LDU 32
ENDS
;; param: to
;; param: val
; function processTransfer
;; get member sender
GETGLOB 9
;; push identifier to
;; push identifier val
BLKPUSH 2, 2
CALLREF {
	CALL $_checkTransfer_internal_macro$
}
;; decl: total
;; if
;; push identifier total
DUP
EQINT 0
PUSHCONT {
	;; Remote call ITokenWallet.abort
	;; get member sender
	GETGLOB 9
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHSLICE x402625a00000000000000000000000000000cc7fa59d_
	STSLICER
	;; val
	;; push identifier val
	PUSH S2
	STUR 32
	ENDC
	PUSHINT 0
	SENDRAWMSG
	;; Remote call ITokenWallet.withdraw
	;; push identifier to
	PUSH S2
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHSLICE x402625a00000000000000000000000000000e47f9271_
	STSLICER
	;; val
	;; push identifier val
	PUSH S2
	STUR 32
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	;; Remote call ITokenWallet.collect
	;; get member sender
	GETGLOB 9
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHSLICE x402625a00000000000000000000000000000cebf8ea9_
	STSLICER
	;; val
	;; push identifier total
	PUSH S1
	STUR 32
	ENDC
	PUSHINT 0
	SENDRAWMSG
	;; Remote call ITokenWallet.pay
	;; push identifier to
	PUSH S2
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHSLICE x402625a0000000000000000000000000000014cae551_
	STSLICER
	;; val
	;; push identifier val
	PUSH S2
	STUR 32
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IFELSE
;; end if
; end function processTransfer
BLKDROP 3
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro accrue
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode val
LDU 32
ENDS
;; param: val
; function accrue
;; get member sender
GETGLOB 9
;; decl: from
;; push identifier from
DUP
MYADDR
;; push identifier val
PUSH S3
CALLREF {
	CALL $_checkTransfer_internal_macro$
}
;; decl: total
;; if
;; push identifier total
DUP
EQINT 0
PUSHCONT {
}
PUSHCONT {
	;; Remote call ITokenWallet.debit
	;; push identifier from
	PUSH S1
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHSLICE x402625a00000000000000000000000000000f916bfd9_
	STSLICER
	;; val
	;; push identifier total
	PUSH S1
	STUR 32
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IFELSE
;; end if
; end function accrue
BLKDROP 3
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro updateTransferFee
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode val
LDU 8
ENDS
;; param: val
; modifier voted
PUSHCONT {
	;; index
	;; get member sender
	GETGLOB 9
	;; push identifier _clients
	GETGLOB 20
	PUSHINT 267
	DICTGET
	PUSHCONT {
		PLDU 16
	}
	PUSHCONT {
		PUSHINT 0
	}
	IFELSE
	;; decl: id
	;; if
	;; push identifier id
	DUP
	NEQINT 10
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; push identifier id
		DUP
		NEQINT 40
	}
	IF
	PUSHCONT {
		;; push identifier id
		DUP
		PUSHINT 123
		CALLREF {
			CALL $_error_internal_macro$
		}
		;; return
		DROP
	}
	IFJMP
	;; end if
	ACCEPT
	; function updateTransferFee
	; expValue
	; end expValue
	;; push identifier val
	; colValue
	; end colValue
	; end function updateTransferFee
	DROP
	DUP
	SETGLOB 18
}
CALLX
; end modifier voted
DROP
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro claimTransferFee
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode id
LDU 16
; Decode val
LDU 32
ENDS
;; param: id
;; param: val
; modifier voted
PUSHCONT {
	;; index
	;; get member sender
	GETGLOB 9
	;; push identifier _clients
	GETGLOB 20
	PUSHINT 267
	DICTGET
	PUSHCONT {
		PLDU 16
	}
	PUSHCONT {
		PUSHINT 0
	}
	IFELSE
	;; decl: id
	;; if
	;; push identifier id
	DUP
	NEQINT 10
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; push identifier id
		DUP
		NEQINT 40
	}
	IF
	PUSHCONT {
		;; push identifier id
		DUP
		PUSHINT 123
		CALLREF {
			CALL $_error_internal_macro$
		}
		;; return
		DROP
	}
	IFJMP
	;; end if
	ACCEPT
	; function claimTransferFee
	;; if
	;; !
	;; map.exists
	;; push identifier id
	PUSH S2
	;; push identifier _ledger
	PUSHINT 32
	GETGLOBVAR
	PUSHINT 16
	DICTUGET
	DUP
	PUSHCONT {
		NIP
	}
	IF
	NOT
	PUSHCONT {
		;; push identifier id
		PUSH S2
		PUSHINT 351
		CALLREF {
			CALL $_error_internal_macro$
		}
	}
	PUSHCONT {
		;; if
		;; push identifier val
		PUSH S1
		;; >
		;; push identifier _accruedFee
		GETGLOB 24
		GREATER
		PUSHCONT {
			;; push identifier id
			PUSH S2
			PUSHINT 350
			CALLREF {
				CALL $_error_internal_macro$
			}
		}
		PUSHCONT {
			;; push identifier val
			; expValue
			;; fetch _totalFeeClaimed
			; end expValue
			GETGLOB 25
			PUSH S2
			ADD
			UFITS 32
			; colValue
			SETGLOB 25
			; end colValue
			;; push identifier val
			; expValue
			;; fetch _accruedFee
			; end expValue
			GETGLOB 24
			PUSH S2
			SUB
			UFITS 32
			; colValue
			SETGLOB 24
			; end colValue
			;; Remote call Medium.creditOwner
			;; push identifier this
			; call function of this
			MYADDR
			NEWC
			STSLICECONST x62_
			STSLICE
			PUSHSLICE x402625a000000000000000000000000000009a2d31d3_
			STSLICER
			;; id
			;; push identifier id
			PUSH S3
			STUR 16
			;; val
			;; push identifier val
			PUSH S2
			STUR 32
			ENDC
			PUSHINT 0
			SENDRAWMSG
		}
		IFELSE
		;; end if
	}
	IFELSE
	;; end if
	; end function claimTransferFee
	DROP
}
CALLX
; end modifier voted
DROP2
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro mint
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode id
LDU 16
; Decode val
LDU 32
ENDS
;; param: id
;; param: val
; modifier voted
PUSHCONT {
	;; index
	;; get member sender
	GETGLOB 9
	;; push identifier _clients
	GETGLOB 20
	PUSHINT 267
	DICTGET
	PUSHCONT {
		PLDU 16
	}
	PUSHCONT {
		PUSHINT 0
	}
	IFELSE
	;; decl: id
	;; if
	;; push identifier id
	DUP
	NEQINT 10
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; push identifier id
		DUP
		NEQINT 40
	}
	IF
	PUSHCONT {
		;; push identifier id
		DUP
		PUSHINT 123
		CALLREF {
			CALL $_error_internal_macro$
		}
		;; return
		DROP
	}
	IFJMP
	;; end if
	ACCEPT
	; function mint
	;; push identifier val
	PUSH S1
	CALLREF {
		CALL $_gain_internal_macro$
	}
	;; push identifier val
	; expValue
	;; fetch _totalSupply
	; end expValue
	GETGLOB 23
	PUSH S2
	ADD
	UFITS 32
	; colValue
	SETGLOB 23
	; end colValue
	;; push identifier id
	PUSH S2
	;; get member Mint
	PUSHINT 1
	;; push identifier id
	PUSH S4
	GTINT 0
	PUSHCONT {
		;; get member Done
		PUSHINT 6
	}
	PUSHCONT {
		;; get member Failed
		PUSHINT 7
	}
	IFELSE
	CALLREF {
		CALL $_logEvent_internal_macro$
	}
	; end function mint
	DROP
}
CALLX
; end modifier voted
DROP2
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro burn
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode id
LDU 16
; Decode val
LDU 32
ENDS
;; param: id
;; param: val
; modifier voted
PUSHCONT {
	;; index
	;; get member sender
	GETGLOB 9
	;; push identifier _clients
	GETGLOB 20
	PUSHINT 267
	DICTGET
	PUSHCONT {
		PLDU 16
	}
	PUSHCONT {
		PUSHINT 0
	}
	IFELSE
	;; decl: id
	;; if
	;; push identifier id
	DUP
	NEQINT 10
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; push identifier id
		DUP
		NEQINT 40
	}
	IF
	PUSHCONT {
		;; push identifier id
		DUP
		PUSHINT 123
		CALLREF {
			CALL $_error_internal_macro$
		}
		;; return
		DROP
	}
	IFJMP
	;; end if
	ACCEPT
	; function burn
	;; if
	;; push identifier val
	PUSH S1
	;; >
	;; get member balance
	;; index
	PUSHINT 40
	;; push identifier _ledger
	PUSHINT 32
	GETGLOBVAR
	PUSHINT 16
	DICTUGET
	PUSHCONT {
		NEWC
		PUSHINT 32
		STZEROES
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		STSLICER
		PUSHINT 32
		STZEROES
		ENDC
		CTOS
	}
	IFNOT
	PLDU 32
	GREATER
	PUSHCONT {
		;; push identifier id
		PUSH S2
		PUSHINT 218
		CALLREF {
			CALL $_error_internal_macro$
		}
	}
	PUSHCONT {
		;; push identifier val
		; expValue
		;; fetch _totalSupply
		; end expValue
		GETGLOB 23
		PUSH S2
		SUB
		UFITS 32
		; colValue
		SETGLOB 23
		; end colValue
		;; push identifier val
		PUSH S1
		CALLREF {
			CALL $_lose_internal_macro$
		}
	}
	IFELSE
	;; end if
	;; push identifier id
	PUSH S2
	;; get member Burn
	PUSHINT 2
	;; push identifier id
	PUSH S4
	GTINT 0
	PUSHCONT {
		;; get member Done
		PUSHINT 6
	}
	PUSHCONT {
		;; get member Failed
		PUSHINT 7
	}
	IFELSE
	CALLREF {
		CALL $_logEvent_internal_macro$
	}
	; end function burn
	DROP
}
CALLX
; end modifier voted
DROP2
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro withdraw
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode id
LDU 16
; Decode val
LDU 32
ENDS
;; param: id
;; param: val
; modifier voted
PUSHCONT {
	;; index
	;; get member sender
	GETGLOB 9
	;; push identifier _clients
	GETGLOB 20
	PUSHINT 267
	DICTGET
	PUSHCONT {
		PLDU 16
	}
	PUSHCONT {
		PUSHINT 0
	}
	IFELSE
	;; decl: id
	;; if
	;; push identifier id
	DUP
	NEQINT 10
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; push identifier id
		DUP
		NEQINT 40
	}
	IF
	PUSHCONT {
		;; push identifier id
		DUP
		PUSHINT 123
		CALLREF {
			CALL $_error_internal_macro$
		}
		;; return
		DROP
	}
	IFJMP
	;; end if
	ACCEPT
	; function withdraw
	;; if
	;; push identifier val
	PUSH S1
	;; >
	;; push identifier _totalSupply
	GETGLOB 23
	GREATER
	PUSHCONT {
		;; push identifier id
		PUSH S2
		PUSHINT 218
		CALLREF {
			CALL $_error_internal_macro$
		}
	}
	PUSHCONT {
		;; push identifier val
		; expValue
		;; fetch _totalSupply
		; end expValue
		GETGLOB 23
		PUSH S2
		SUB
		UFITS 32
		; colValue
		SETGLOB 23
		; end colValue
		;; push identifier val
		PUSH S1
		CALLREF {
			CALL $_lose_internal_macro$
		}
		;; Remote call Medium.creditOwner
		;; push identifier this
		; call function of this
		MYADDR
		NEWC
		STSLICECONST x62_
		STSLICE
		PUSHSLICE x402625a000000000000000000000000000009a2d31d3_
		STSLICER
		;; id
		;; push identifier id
		PUSH S3
		STUR 16
		;; val
		;; push identifier val
		PUSH S2
		STUR 32
		ENDC
		PUSHINT 0
		SENDRAWMSG
	}
	IFELSE
	;; end if
	;; push identifier id
	PUSH S2
	;; get member Withdraw
	PUSHINT 3
	;; push identifier id
	PUSH S4
	GTINT 0
	PUSHCONT {
		;; get member Done
		PUSHINT 6
	}
	PUSHCONT {
		;; get member Failed
		PUSHINT 7
	}
	IFELSE
	CALLREF {
		CALL $_logEvent_internal_macro$
	}
	; end function withdraw
	DROP
}
CALLX
; end modifier voted
DROP2
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro creditOwner
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode id
LDU 16
; Decode val
LDU 32
ENDS
;; param: id
;; param: val
; modifier voted
PUSHCONT {
	;; index
	;; get member sender
	GETGLOB 9
	;; push identifier _clients
	GETGLOB 20
	PUSHINT 267
	DICTGET
	PUSHCONT {
		PLDU 16
	}
	PUSHCONT {
		PUSHINT 0
	}
	IFELSE
	;; decl: id
	;; if
	;; push identifier id
	DUP
	NEQINT 10
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; push identifier id
		DUP
		NEQINT 40
	}
	IF
	PUSHCONT {
		;; push identifier id
		DUP
		PUSHINT 123
		CALLREF {
			CALL $_error_internal_macro$
		}
		;; return
		DROP
	}
	IFJMP
	;; end if
	ACCEPT
	; function creditOwner
	;; push identifier val
	PUSH S1
	; expValue
	;; fetch _ledger
	PUSHINT 32
	GETGLOBVAR
	;; push identifier id
	PUSH S4
	SWAP
	DUP2
	PUSHINT 16
	DICTUGET
	PUSHCONT {
		NEWC
		PUSHINT 32
		STZEROES
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		STSLICER
		PUSHINT 32
		STZEROES
		ENDC
		CTOS
	}
	IFNOT
	LDU 32
	SWAP
	; end expValue
	BLKSWAP 1, 4
	ADD
	UFITS 32
	; colValue
	NEWC
	STU 32
	STSLICE
	ROTREV
	PUSHINT 16
	DICTUSETB
	PUSHINT 32
	SETGLOBVAR
	; end colValue
	;; Remote call ITokenWallet.credit
	;; get member addr
	;; index
	;; push identifier id
	PUSH S2
	;; push identifier _ledger
	PUSHINT 32
	GETGLOBVAR
	PUSHINT 16
	DICTUGET
	PUSHCONT {
		NEWC
		PUSHINT 32
		STZEROES
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		STSLICER
		PUSHINT 32
		STZEROES
		ENDC
		CTOS
	}
	IFNOT
	LDSLICE 32
	NIP
	LDMSGADDR
	DROP
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHSLICE x402625a000000000000000000000000000007f43eceb_
	STSLICER
	;; val
	;; push identifier val
	PUSH S2
	STUR 32
	ENDC
	PUSHINT 0
	SENDRAWMSG
	; end function creditOwner
	DROP
}
CALLX
; end modifier voted
DROP2
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro approve
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode eventID
LDU 32
ENDS
;; param: eventID
; modifier owner
PUSHCONT {
	;; index
	;; get member sender
	GETGLOB 9
	;; push identifier _clients
	GETGLOB 20
	PUSHINT 267
	DICTGET
	PUSHCONT {
		PLDU 16
	}
	PUSHCONT {
		PUSHINT 0
	}
	IFELSE
	;; decl: id
	;; if
	;; push identifier id
	DUP
	;; >=
	PUSHINT 10000
	GEQ
	PUSHCONT {
		;; push identifier id
		DUP
		PUSHINT 124
		CALLREF {
			CALL $_error_internal_macro$
		}
		;; return
		DROP
	}
	IFJMP
	;; end if
	;; if
	;; push identifier id
	DUP
	;; >
	PUSHINT 1
	;; +
	;; push identifier _ownerCount
	GETGLOB 27
	ADD
	UFITS 16
	GREATER
	PUSHCONT {
		;; push identifier id
		DUP
		PUSHINT 125
		CALLREF {
			CALL $_error_internal_macro$
		}
	}
	IF
	;; end if
	; function approve
	;; index
	;; get member sender
	GETGLOB 9
	;; push identifier _clients
	GETGLOB 20
	PUSHINT 267
	DICTGET
	PUSHCONT {
		PLDU 16
	}
	PUSHCONT {
		PUSHINT 0
	}
	IFELSE
	;; decl: id
	;; push identifier id
	DUP
	;; -
	DEC
	UFITS 16
	;; uint8
	UFITS 8
	;; decl: ownerId
	PUSHINT 1
	;; uint16
	;; <<
	;; push identifier ownerId
	PUSH S1
	LSHIFT
	UFITS 16
	;; decl: mask
	;; map.fetch
	;; push identifier eventID
	PUSH S4
	;; push identifier _onApproval
	GETGLOB 28
	PUSHINT 32
	DICTUGET
	NULLSWAPIFNOT
	PUSHCONT {
		LDU 32
		LDU 8
		LDU 8
		PLDU 32
		TUPLE 4
	}
	IF
	;; decl: eo
	;; get member Checking
	PUSHINT 1
	;; decl: st
	;; if
	;; push identifier id
	PUSH S4
	EQINT 10
	PUSHCONT {
		; expValue
		; end expValue
		;; get member Approved
		; colValue
		DROP
		PUSHINT 3
		; end colValue
	}
	PUSHCONT {
		;; if
		;; push identifier ownerId
		PUSH S3
		EQINT 0
		PUSHCONT {
			; expValue
			; end expValue
			;; get member NotFound
			; colValue
			DROP
			PUSHINT 5
			; end colValue
		}
		PUSHCONT {
			;; if
			;; push identifier eo
			PUSH S1
			ISNULL
			PUSHCONT {
				;; push identifier eo
				PUSH2 S1, S1
				ISNULL
				THROWIF 63
				;; decl: ie
				;; index
				;; get member id
				;; push identifier ie
				DUP
				INDEX 0
				;; push identifier _proposals
				GETGLOB 30
				PUSHINT 32
				DICTUGET
				PUSHCONT {
					LDU 32
					LDU 8
					LDU 32
					LDU 32
					LDU 32
					LDU 8
					LDU 8
					LDU 16
					LDU 8
					LDU 32
					PLDU 16
					TUPLE 11
				}
				PUSHCONT {
					PUSHINT 0
					BLKPUSH 10, 0
					TUPLE 11
				}
				IFELSE
				;; decl: p
				;; if
				;; get member validUntil
				;; push identifier p
				DUP
				INDEX 3
				;; <
				;; push identifier now
				NOW
				LESS
				PUSHCONT {
					; expValue
					; end expValue
					;; get member Expired
					PUSHINT 9
					; colValue
					POP S3
					; end colValue
				}
				IF
				;; end if
				; for
				PUSHINT 0
				;; decl: i
				FALSE ; decl return flag
				PUSHCONT {
					DUP
					LESSINT 2
					DUP
					PUSHCONT {
						DROP
						;; push identifier i
						;; <
						;; get member signsAt
						;; push identifier p
						PUSH2 S1, S2
						INDEX 6
						LESS
					}
					IF
				}
				PUSHCONT {
					PUSHCONT {
						;; if
						;; get member signs
						;; push identifier p
						PUSH S2
						INDEX 7
						;; &
						;; push identifier mask
						PUSH S7
						AND
						GTINT 0
						PUSHCONT {
							; expValue
							; end expValue
							;; get member DoubleSigned
							; colValue
							; end colValue
							;; break
							DROP
							PUSHINT 7
							POP S4
							PUSHINT 2
						}
						IFJMP
						;; end if
					}
					CALLX
					DUP
					GTINT 1
					IFRET
					;; ++
					; expValue
					PUSH S1
					; end expValue
					INC
					; colValue
					POP S2
					; end colValue
				}
				WHILE
				DROP2
				; end for
				;; if
				;; push identifier st
				PUSH S2
				;; <
				;; get member Success
				LESSINT 4
				PUSHCONT {
					;; ++
					; expValue
					;; fetch _proposals
					GETGLOB 30
					;; get member id
					;; push identifier ie
					PUSH S2
					INDEX 0
					SWAP
					DUP2
					PUSHINT 32
					DICTUGET
					PUSHCONT {
						NEWC
						PUSHINT 224
						STZEROES
						ENDC
						CTOS
					}
					IFNOT
					LDSLICE 144
					LDU 8
					SWAP
					; end expValue
					INC
					UFITS 8
					; colValue
					ROT
					NEWC
					STSLICE
					STU 8
					STSLICE
					ROTREV
					PUSHINT 32
					DICTUSETB
					SETGLOB 30
					; end colValue
					;; push identifier mask
					PUSH S4
					; expValue
					;; fetch _proposals
					GETGLOB 30
					;; get member id
					;; push identifier ie
					PUSH S3
					INDEX 0
					SWAP
					DUP2
					PUSHINT 32
					DICTUGET
					PUSHCONT {
						NEWC
						PUSHINT 224
						STZEROES
						ENDC
						CTOS
					}
					IFNOT
					LDSLICE 152
					LDU 16
					SWAP
					; end expValue
					BLKSWAP 1, 5
					OR
					; colValue
					ROT
					NEWC
					STSLICE
					STU 16
					STSLICE
					ROTREV
					PUSHINT 32
					DICTUSETB
					SETGLOB 30
					; end colValue
					; expValue
					; end expValue
					;; get member Approved
					PUSHINT 3
					; colValue
					POP S3
					; end colValue
					;; if
					;; get member signsAt
					;; index
					;; get member id
					;; push identifier ie
					PUSH S1
					INDEX 0
					;; push identifier _proposals
					GETGLOB 30
					PUSHINT 32
					DICTUGET
					PUSHCONT {
						NEWC
						PUSHINT 224
						STZEROES
						ENDC
						CTOS
					}
					IFNOT
					LDSLICE 144
					NIP
					PLDU 8
					;; >=
					;; get member signsReq
					;; push identifier p
					PUSH S1
					INDEX 8
					GEQ
					PUSHCONT {
						; expValue
						; end expValue
						;; get member Confirmed
						PUSHINT 2
						; colValue
						POP S3
						; end colValue
						;; Remote call Medium.commit
						;; push identifier this
						; call function of this
						MYADDR
						NEWC
						STSLICECONST x62_
						STSLICE
						PUSHSLICE x402625a000000000000000000000000000003c3799ab_
						STSLICER
						;; eventID
						;; push identifier eventID
						PUSH S9
						STUR 32
						;; st
						;; get member Confirmed
						PUSHINT 4
						STUR 8
						ENDC
						PUSHINT 0
						SENDRAWMSG
					}
					IF
					;; end if
				}
				PUSHCONT {
					;; if
					;; push identifier st
					PUSH S2
					;; >
					;; get member Failure
					GTINT 8
					PUSHCONT {
						;; Remote call Medium.commit
						;; push identifier this
						; call function of this
						MYADDR
						NEWC
						STSLICECONST x62_
						STSLICE
						PUSHSLICE x402625a000000000000000000000000000003c3799ab_
						STSLICER
						;; eventID
						;; push identifier eventID
						PUSH S9
						STUR 32
						;; st
						;; get member Rejected
						PUSHINT 9
						STUR 8
						ENDC
						PUSHINT 0
						SENDRAWMSG
					}
					IF
					;; end if
				}
				IFELSE
				;; end if
				;; push identifier id
				;; get member eType
				;; push identifier ie
				PUSH2 S6, S1
				INDEX 1
				;; get member state
				;; push identifier ie
				PUSH S3
				INDEX 2
				CALLREF {
					CALL $_logEvent_internal_macro$
				}
				DROP2
			}
			IFNOT
			;; end if
		}
		IFELSE
		;; end if
	}
	IFELSE
	;; end if
	; end function approve
	BLKDROP 6
}
CALLX
; end modifier owner
DROP
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro reject
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode eventID
LDU 32
ENDS
;; param: eventID
; modifier owner
PUSHCONT {
	;; index
	;; get member sender
	GETGLOB 9
	;; push identifier _clients
	GETGLOB 20
	PUSHINT 267
	DICTGET
	PUSHCONT {
		PLDU 16
	}
	PUSHCONT {
		PUSHINT 0
	}
	IFELSE
	;; decl: id
	;; if
	;; push identifier id
	DUP
	;; >=
	PUSHINT 10000
	GEQ
	PUSHCONT {
		;; push identifier id
		DUP
		PUSHINT 124
		CALLREF {
			CALL $_error_internal_macro$
		}
		;; return
		DROP
	}
	IFJMP
	;; end if
	;; if
	;; push identifier id
	DUP
	;; >
	PUSHINT 1
	;; +
	;; push identifier _ownerCount
	GETGLOB 27
	ADD
	UFITS 16
	GREATER
	PUSHCONT {
		;; push identifier id
		DUP
		PUSHINT 125
		CALLREF {
			CALL $_error_internal_macro$
		}
	}
	IF
	;; end if
	; function reject
	;; index
	;; get member sender
	GETGLOB 9
	;; push identifier _clients
	GETGLOB 20
	PUSHINT 267
	DICTGET
	PUSHCONT {
		PLDU 16
	}
	PUSHCONT {
		PUSHINT 0
	}
	IFELSE
	;; decl: id
	;; map.fetch
	;; push identifier eventID
	PUSH S2
	;; push identifier _onApproval
	GETGLOB 28
	PUSHINT 32
	DICTUGET
	NULLSWAPIFNOT
	PUSHCONT {
		LDU 32
		LDU 8
		LDU 8
		PLDU 32
		TUPLE 4
	}
	IF
	;; decl: eo
	;; if
	;; push identifier eo
	DUP
	ISNULL
	PUSHCONT {
		;; push identifier eo
		BLKPUSH 2, 0
		ISNULL
		THROWIF 63
		;; decl: e
		;; Remote call Medium.commit
		;; push identifier this
		; call function of this
		MYADDR
		NEWC
		STSLICECONST x62_
		STSLICE
		PUSHSLICE x402625a000000000000000000000000000003c3799ab_
		STSLICER
		;; eventID
		;; push identifier eventID
		PUSH S5
		STUR 32
		;; st
		;; get member Rejected
		PUSHINT 9
		STUR 8
		ENDC
		PUSHINT 0
		SENDRAWMSG
		;; push identifier id
		;; get member eType
		;; push identifier e
		PUSH2 S2, S0
		INDEX 1
		;; get member state
		;; push identifier e
		PUSH S2
		INDEX 2
		CALLREF {
			CALL $_logEvent_internal_macro$
		}
		DROP
	}
	IFNOT
	;; end if
	; end function reject
	BLKDROP 3
}
CALLX
; end modifier owner
DROP
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro propose
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode eType
LDU 8
; Decode value
LDU 32
ENDS
;; param: eType
;; param: value
; modifier owner
PUSHCONT {
	;; index
	;; get member sender
	GETGLOB 9
	;; push identifier _clients
	GETGLOB 20
	PUSHINT 267
	DICTGET
	PUSHCONT {
		PLDU 16
	}
	PUSHCONT {
		PUSHINT 0
	}
	IFELSE
	;; decl: id
	;; if
	;; push identifier id
	DUP
	;; >=
	PUSHINT 10000
	GEQ
	PUSHCONT {
		;; push identifier id
		DUP
		PUSHINT 124
		CALLREF {
			CALL $_error_internal_macro$
		}
		;; return
		DROP
	}
	IFJMP
	;; end if
	;; if
	;; push identifier id
	DUP
	;; >
	PUSHINT 1
	;; +
	;; push identifier _ownerCount
	GETGLOB 27
	ADD
	UFITS 16
	GREATER
	PUSHCONT {
		;; push identifier id
		DUP
		PUSHINT 125
		CALLREF {
			CALL $_error_internal_macro$
		}
	}
	IF
	;; end if
	; function propose
	PUSHCONT {
		;; index
		;; get member sender
		GETGLOB 9
		;; push identifier _clients
		GETGLOB 20
		PUSHINT 267
		DICTGET
		PUSHCONT {
			PLDU 16
		}
		PUSHCONT {
			PUSHINT 0
		}
		IFELSE
		;; decl: id
		;; if
		;; get member state
		;; push identifier _currentEvent
		GETGLOB 31
		INDEX 2
		;; ==
		;; get member OnApproval
		EQINT 2
		;; short-circuiting &&
		DUP
		PUSHCONT {
			DROP
			;; get member validUntil
			;; index
			;; get member id
			;; push identifier _currentEvent
			GETGLOB 31
			INDEX 0
			;; push identifier _proposals
			GETGLOB 30
			PUSHINT 32
			DICTUGET
			PUSHCONT {
				NEWC
				PUSHINT 224
				STZEROES
				ENDC
				CTOS
			}
			IFNOT
			LDSLICE 72
			NIP
			PLDU 32
			;; <
			;; push identifier now
			NOW
			LESS
		}
		IF
		PUSHCONT {
			;; delete
			; expValue
			; end expValue
			PUSHINT 0
			BLKPUSH 3, 0
			TUPLE 4
			; colValue
			SETGLOB 31
			; end colValue
		}
		IF
		;; end if
		;; if
		;; get member state
		;; push identifier _currentEvent
		GETGLOB 31
		INDEX 2
		;; >
		;; get member Undefined
		GTINT 0
		;; short-circuiting &&
		DUP
		PUSHCONT {
			DROP
			;; get member state
			;; push identifier _currentEvent
			GETGLOB 31
			INDEX 2
			;; <
			;; get member Committed
			LESSINT 5
		}
		IF
		PUSHCONT {
			;; return
			DROP
		}
		IFJMP
		;; end if
		;; ++
		; expValue
		;; fetch _eventCount
		GETGLOB 26
		; end expValue
		INC
		DUP
		UFITS 32
		; colValue
		SETGLOB 26
		; end colValue
		;; push identifier eType
		PUSH S4
		;; get member Undefined
		PUSHINT 0
		;; push identifier now
		NOW
		;; uint32
		TUPLE 4
		; expValue
		; end expValue
		; colValue
		SETGLOB 31
		; end colValue
		;; get member Requested
		PUSHINT 1
		CALLREF {
			CALL $_transit_internal_macro$
		}
		;; push identifier _eventCount
		GETGLOB 26
		;; decl: eid
		;; push identifier id
		PUSH S1
		;; -
		DEC
		UFITS 16
		;; uint8
		UFITS 8
		;; decl: ownerId
		PUSHINT 1
		;; uint16
		;; <<
		;; push identifier ownerId
		PUSH S1
		LSHIFT
		UFITS 16
		;; decl: signs
		;; push identifier eid
		;; push identifier eType
		PUSH2 S2, S6
		;; push identifier now
		NOW
		;; uint32
		;; push identifier now
		NOW
		;; +
		ADDCONST 70
		UFITS 32
		;; uint32
		PUSHINT 0
		;; get member OnApproval
		PUSHINT 3
		PUSHINT 1
		;; push identifier signs
		PUSH S7
		PUSHINT 2
		;; push identifier value
		;; get member tokenWalletId
		;; index
		;; push identifier ownerId
		PUSH2 S14, S10
		;; push identifier _owners
		PUSHINT 33
		GETGLOBVAR
		PUSHINT 8
		DICTUGET
		PUSHCONT {
			NEWC
			PUSHINT 32
			STZEROES
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			STSLICER
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			STSLICER
			PUSHINT 32
			STZEROES
			ENDC
			CTOS
		}
		IFNOT
		LDSLICE 16
		NIP
		PLDU 16
		TUPLE 11
		; expValue
		;; fetch _proposals
		;; push identifier eid
		PUSH S3
		GETGLOB 30
		; end expValue
		ROT
		; colValue
		UNTUPLE 11
		REVERSE 11, 0
		NEWC
		STU 32
		STU 8
		STU 32
		STU 32
		STU 32
		STU 8
		STU 8
		STU 16
		STU 8
		STU 32
		STU 16
		ROTREV
		PUSHINT 32
		DICTUSETB
		SETGLOB 30
		; end colValue
		; expValue
		;; fetch _onApproval
		;; push identifier eid
		PUSH S2
		GETGLOB 28
		; end expValue
		;; push identifier _currentEvent
		GETGLOB 31
		; colValue
		UNTUPLE 4
		REVERSE 4, 0
		NEWC
		STU 32
		STU 8
		STU 8
		STU 32
		ROTREV
		PUSHINT 32
		DICTUSETB
		SETGLOB 28
		; end colValue
		;; get member OnApproval
		PUSHINT 2
		CALLREF {
			CALL $_transit_internal_macro$
		}
		BLKDROP 4
	}
	CALLX
	; end function propose
	DROP
}
CALLX
; end modifier owner
DROP2
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	_execute_internal
.type	_execute_internal, @function
CALL $_execute_internal_macro$

.macro _execute_internal_macro
;; param: e
; function _execute
;; index
;; get member id
;; push identifier e
DUP
INDEX 0
;; push identifier _proposals
GETGLOB 30
PUSHINT 32
DICTUGET
PUSHCONT {
	LDU 32
	LDU 8
	LDU 32
	LDU 32
	LDU 32
	LDU 8
	LDU 8
	LDU 16
	LDU 8
	LDU 32
	PLDU 16
	TUPLE 11
}
PUSHCONT {
	PUSHINT 0
	BLKPUSH 10, 0
	TUPLE 11
}
IFELSE
;; decl: p
;; if
;; get member eType
;; push identifier e
PUSH S1
INDEX 1
;; ==
;; get member Mint
EQINT 1
PUSHCONT {
	;; Remote call Medium.mint
	;; push identifier this
	; call function of this
	MYADDR
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHSLICE x402625a000000000000000000000000000005a0a9b41_
	STSLICER
	;; id
	;; get member actor
	;; push identifier p
	PUSH S1
	INDEX 10
	STUR 16
	;; val
	;; get member value
	;; push identifier p
	PUSH S1
	INDEX 9
	STUR 32
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	;; if
	;; get member eType
	;; push identifier e
	PUSH S1
	INDEX 1
	;; ==
	;; get member Burn
	EQINT 2
	PUSHCONT {
		;; Remote call Medium.burn
		;; push identifier this
		; call function of this
		MYADDR
		NEWC
		STSLICECONST x62_
		STSLICE
		PUSHSLICE x402625a000000000000000000000000000008b03baf5_
		STSLICER
		;; id
		;; get member actor
		;; push identifier p
		PUSH S1
		INDEX 10
		STUR 16
		;; val
		;; get member value
		;; push identifier p
		PUSH S1
		INDEX 9
		STUR 32
		ENDC
		PUSHINT 0
		SENDRAWMSG
	}
	PUSHCONT {
		;; if
		;; get member eType
		;; push identifier e
		PUSH S1
		INDEX 1
		;; ==
		;; get member Withdraw
		EQINT 3
		PUSHCONT {
			;; Remote call Medium.withdraw
			;; push identifier this
			; call function of this
			MYADDR
			NEWC
			STSLICECONST x62_
			STSLICE
			PUSHSLICE x402625a000000000000000000000000000001d75eecb_
			STSLICER
			;; id
			;; get member actor
			;; push identifier p
			PUSH S1
			INDEX 10
			STUR 16
			;; val
			;; get member value
			;; push identifier p
			PUSH S1
			INDEX 9
			STUR 32
			ENDC
			PUSHINT 0
			SENDRAWMSG
		}
		PUSHCONT {
			;; if
			;; get member eType
			;; push identifier e
			PUSH S1
			INDEX 1
			;; ==
			;; get member SetTransferFee
			EQINT 4
			PUSHCONT {
				;; Remote call Medium.updateTransferFee
				;; push identifier this
				; call function of this
				MYADDR
				NEWC
				STSLICECONST x62_
				STSLICE
				PUSHSLICE x402625a000000000000000000000000000009738ce9b_
				STSLICER
				;; val
				;; get member value
				;; push identifier p
				PUSH S1
				INDEX 9
				;; uint8
				UFITS 8
				STUR 8
				ENDC
				PUSHINT 0
				SENDRAWMSG
			}
			PUSHCONT {
				;; if
				;; get member eType
				;; push identifier e
				PUSH S1
				INDEX 1
				;; ==
				;; get member ClaimTransferFee
				EQINT 5
				PUSHCONT {
					;; Remote call Medium.claimTransferFee
					;; push identifier this
					; call function of this
					MYADDR
					NEWC
					STSLICECONST x62_
					STSLICE
					PUSHSLICE x402625a0000000000000000000000000000038a1c8b7_
					STSLICER
					;; id
					;; get member actor
					;; push identifier p
					PUSH S1
					INDEX 10
					STUR 16
					;; val
					;; get member value
					;; push identifier p
					PUSH S1
					INDEX 9
					STUR 32
					ENDC
					PUSHINT 0
					SENDRAWMSG
				}
				PUSHCONT {
					;; get member actor
					;; push identifier p
					DUP
					INDEX 10
					PUSHINT 130
					CALLREF {
						CALL $_error_internal_macro$
					}
				}
				IFELSE
				;; end if
			}
			IFELSE
			;; end if
		}
		IFELSE
		;; end if
	}
	IFELSE
	;; end if
}
IFELSE
;; end if
;; get member actor
;; push identifier p
DUP
INDEX 10
;; get member eType
;; push identifier e
PUSH S2
INDEX 1
;; get member state
;; push identifier e
PUSH S3
INDEX 2
CALLREF {
	CALL $_logEvent_internal_macro$
}
; end function _execute
DROP2

.globl	_transit_internal
.type	_transit_internal, @function
CALL $_transit_internal_macro$

.macro _transit_internal_macro
;; param: st
; function _transit
; expValue
;; fetch _currentEvent
GETGLOB 31
; end expValue
;; push identifier st
PUSH S1
; colValue
SETINDEX 2
SETGLOB 31
; end colValue
;; Remote call Medium.notifyOwners
;; push identifier this
; call function of this
MYADDR
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x402625a00000000000000000000000000000b755f11f_
STSLICER
;; st
;; push identifier st
PUSH S1
STUR 8
ENDC
PUSHINT 0
SENDRAWMSG
; end function _transit
DROP

.macro commit
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode eventID
LDU 32
; Decode st
LDU 8
ENDS
;; param: eventID
;; param: st
; modifier echo
PUSHCONT {
	;; if
	;; get member sender
	GETGLOB 9
	MYADDR
	SDEQ
	PUSHCONT {
		;; index
		;; get member sender
		GETGLOB 9
		;; push identifier _clients
		GETGLOB 20
		PUSHINT 267
		DICTGET
		PUSHCONT {
			PLDU 16
		}
		PUSHCONT {
			PUSHINT 0
		}
		IFELSE
		;; decl: id
		;; push identifier id
		DUP
		PUSHINT 120
		CALLREF {
			CALL $_error_internal_macro$
		}
		;; return
		DROP
	}
	IFNOTJMP
	;; end if
	ACCEPT
	; function commit
	;; map.fetch
	;; push identifier eventID
	PUSH S1
	;; push identifier _onApproval
	GETGLOB 28
	PUSHINT 32
	DICTUGET
	NULLSWAPIFNOT
	PUSHCONT {
		LDU 32
		LDU 8
		LDU 8
		PLDU 32
		TUPLE 4
	}
	IF
	;; decl: eo
	;; if
	;; push identifier eo
	DUP
	ISNULL
	PUSHCONT {
		;; push identifier eo
		BLKPUSH 2, 0
		ISNULL
		THROWIF 63
		;; decl: e
		;; push identifier now
		NOW
		;; uint32
		; expValue
		;; fetch _proposals
		;; push identifier eventID
		PUSH S4
		GETGLOB 30
		DUP2
		PUSHINT 32
		DICTUGET
		PUSHCONT {
			NEWC
			PUSHINT 224
			STZEROES
			ENDC
			CTOS
		}
		IFNOT
		LDSLICE 104
		LDSLICE 32
		NIP
		; end expValue
		BLKSWAP 1, 4
		; colValue
		ROT
		NEWC
		STSLICE
		STU 32
		STSLICE
		ROTREV
		PUSHINT 32
		DICTUSETB
		SETGLOB 30
		; end colValue
		;; push identifier st
		PUSH S2
		CALLREF {
			CALL $_transit_internal_macro$
		}
		;; push identifier _id
		GETGLOB 11
		;; get member eType
		;; push identifier e
		PUSH S1
		INDEX 1
		;; get member state
		;; push identifier e
		PUSH S2
		INDEX 2
		CALLREF {
			CALL $_logEvent_internal_macro$
		}
		;; if
		;; push identifier st
		PUSH S2
		;; ==
		;; get member Confirmed
		EQINT 4
		PUSHCONT {
			;; push identifier e
			DUP
			CALLREF {
				CALL $_execute_internal_macro$
			}
		}
		IF
		;; end if
		; expValue
		;; fetch _archived
		GETGLOB 29
		;; get member id
		;; push identifier e
		PUSH S1
		INDEX 0
		SWAP
		; end expValue
		;; push identifier e
		PUSH S2
		; colValue
		UNTUPLE 4
		REVERSE 4, 0
		NEWC
		STU 32
		STU 8
		STU 8
		STU 32
		ROTREV
		PUSHINT 32
		DICTUSETB
		SETGLOB 29
		; end colValue
		;; delete
		; expValue
		;; fetch _onApproval
		;; push identifier eventID
		; end expValue
		; colValue
		; end colValue
		;; delete
		; expValue
		; end expValue
		; colValue
		; end colValue
		DROP
		PUSH S2
		GETGLOB 28
		PUSHINT 32
		DICTUDEL
		DROP
		SETGLOB 28
		PUSHINT 0
		BLKPUSH 3, 0
		TUPLE 4
		SETGLOB 31
	}
	IFNOT
	;; end if
	DROP
	; end function commit
}
CALLX
; end modifier echo
DROP2
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro notifyOwners
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode st
LDU 8
ENDS
;; param: st
; modifier echo
PUSHCONT {
	;; if
	;; get member sender
	GETGLOB 9
	MYADDR
	SDEQ
	PUSHCONT {
		;; index
		;; get member sender
		GETGLOB 9
		;; push identifier _clients
		GETGLOB 20
		PUSHINT 267
		DICTGET
		PUSHCONT {
			PLDU 16
		}
		PUSHCONT {
			PUSHINT 0
		}
		IFELSE
		;; decl: id
		;; push identifier id
		DUP
		PUSHINT 120
		CALLREF {
			CALL $_error_internal_macro$
		}
		;; return
		DROP
	}
	IFNOTJMP
	;; end if
	ACCEPT
	; function notifyOwners
	;; push identifier _owners
	PUSHINT 33
	GETGLOBVAR
	DUP
	PUSHINT 8
	DICTUMIN
	PUSHCONT {
		DUP
		ROT
		LDU 16
		LDU 16
		LDMSGADDR
		LDMSGADDR
		PLDU 32
		TUPLE 5
	}
	PUSHCONT {
		NULL
		NULL
		NULL
	}
	IFELSE
	PUSHCONT {
		PUSH S2
		ISNULL
		NOT
	}
	PUSHCONT {
		;; Remote call IOwnerWallet.updateEventState
		;; get member addr
		;; push identifier oi
		DUP
		INDEX 2
		NEWC
		STSLICECONST x62_
		STSLICE
		PUSHSLICE x402625a000000000000000000000000000005ba1cef3_
		STSLICER
		;; id
		;; push identifier _eventCount
		GETGLOB 26
		STUR 32
		;; state
		;; push identifier st
		PUSH S5
		STUR 8
		ENDC
		PUSHINT 0
		SENDRAWMSG
		PUSH2 S2, S3
		PUSHINT 8
		DICTUGETNEXT
		PUSHCONT {
			DUP
			ROT
			LDU 16
			LDU 16
			LDMSGADDR
			LDMSGADDR
			PLDU 32
			TUPLE 5
		}
		PUSHCONT {
			NULL
			NULL
			NULL
		}
		IFELSE
		BLKDROP2 3, 3
	}
	WHILE
	BLKDROP 4
	; end for
	; end function notifyOwners
}
CALLX
; end modifier echo
DROP
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro supplyImproved
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
;; ret param: twTotal
;; ret param: owTotal
;; ret param: feeTotal
;; ret param: unallocated
PUSHINT 0
BLKPUSH 3, 0
; function supplyImproved
;; push identifier _ledger
PUSHINT 32
GETGLOBVAR
DUP
PUSHINT 16
DICTUMIN
PUSHCONT {
	DUP
	ROT
	LDU 32
	LDMSGADDR
	PLDU 32
	TUPLE 3
}
PUSHCONT {
	NULL
	NULL
	NULL
}
IFELSE
PUSHCONT {
	PUSH S2
	ISNULL
	NOT
}
PUSHCONT {
	;; if
	;; push identifier id
	PUSH S1
	;; >=
	PUSHINT 1
	GEQ
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; push identifier id
		PUSH S1
		LESSINT 10
	}
	IF
	PUSHCONT {
		;; get member balance
		;; push identifier twr
		DUP
		INDEX 0
		; expValue
		PUSH S7
		; end expValue
		ADD
		UFITS 32
		; colValue
		POP S7
		; end colValue
	}
	PUSHCONT {
		;; if
		;; push identifier id
		PUSH S1
		EQINT 40
		PUSHCONT {
			;; get member balance
			;; push identifier twr
			DUP
			INDEX 0
			; expValue
			PUSH S5
			; end expValue
			ADD
			UFITS 32
			; colValue
			POP S5
			; end colValue
		}
		PUSHCONT {
			;; if
			;; push identifier id
			PUSH S1
			;; >=
			PUSHINT 10000
			GEQ
			PUSHCONT {
				;; get member balance
				;; push identifier twr
				DUP
				INDEX 0
				; expValue
				PUSH S8
				; end expValue
				ADD
				UFITS 32
				; colValue
				POP S8
				; end colValue
			}
			IF
			;; end if
		}
		IFELSE
		;; end if
	}
	IFELSE
	;; end if
	PUSH2 S2, S3
	PUSHINT 16
	DICTUGETNEXT
	PUSHCONT {
		DUP
		ROT
		LDU 32
		LDMSGADDR
		PLDU 32
		TUPLE 3
	}
	PUSHCONT {
		NULL
		NULL
		NULL
	}
	IFELSE
	BLKDROP2 3, 3
}
WHILE
BLKDROP 4
; end for
; expValue
; end expValue
;; push identifier _accruedFee
GETGLOB 24
; colValue
POP S2
; end colValue
; end function supplyImproved
;; emitting 4 value(s)
PUSH S4
EQINT -1
PUSHCONT {
	PUSH S6
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHSLICE x0000000000000000000000003c71e8c46_
	STSLICER
	PUSH S4
	STUR 32
	PUSH S3
	STUR 32
	PUSH S2
	STUR 32
	PUSH S1
	STUR 32
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
BLKDROP 4
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro getStats
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
;; ret param: transfers
;; ret param: supply
;; ret param: wallets
;; ret param: transferFee
;; ret param: accruedFee
;; ret param: totalFeeClaimed
; function getStats
; expValue
; end expValue
;; push identifier _transferCount
; colValue
; end colValue
; expValue
; end expValue
;; push identifier _totalSupply
; colValue
; end colValue
; expValue
; end expValue
;; push identifier _walletCount
; colValue
; end colValue
; expValue
; end expValue
;; push identifier _transferFee
; colValue
; end colValue
; expValue
; end expValue
;; push identifier _accruedFee
; colValue
; end colValue
; expValue
; end expValue
;; push identifier _totalFeeClaimed
; colValue
GETGLOB 21
GETGLOB 23
GETGLOB 22
GETGLOB 18
GETGLOB 24
GETGLOB 25
; end colValue
; end function getStats
;; emitting 6 value(s)
PUSH S6
EQINT -1
PUSHCONT {
	PUSH S8
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHSLICE x0000000000000000000000002e88d14c2_
	STSLICER
	PUSH S6
	STUR 32
	PUSH S5
	STUR 32
	PUSH S4
	STUR 32
	PUSH S3
	STUR 8
	PUSH S2
	STUR 32
	PUSH S1
	STUR 32
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
BLKDROP 6
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	_error_internal
.type	_error_internal, @function
CALL $_error_internal_macro$

.macro _error_internal_macro
;; param: id
;; param: code
; function _error
;; if
;; push identifier _logLevel
GETGLOB 17
;; &
PUSHINT 1
AND
GTINT 0
PUSHCONT {
	;; Remote call IEventLog.logError
	;; push identifier _eventLog
	GETGLOB 13
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHSLICE x4017d7840000000000000000000000000000fa768efb_
	STSLICER
	;; id
	;; push identifier id
	PUSH S2
	STUR 16
	;; code
	;; push identifier code
	PUSH S1
	STUR 16
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
;; end if
; end function _error
DROP2

.globl	_checkTonBalance_internal
.type	_checkTonBalance_internal, @function
CALL $_checkTonBalance_internal_macro$

.macro _checkTonBalance_internal_macro
; function _checkTonBalance
;; get member balance
GETPARAM 7
INDEX 0
;; uint64
UFITS 64
;; decl: tonBalance
;; if
;; push identifier tonBalance
DUP
;; <
;; push identifier _warnBalance
GETGLOB 19
LESS
PUSHCONT {
	;; Remote call IRoot.updateTonBalance
	;; push identifier _root
	GETGLOB 14
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHSLICE x402625a00000000000000000000000000000e5f7ae0d_
	STSLICER
	;; id
	;; push identifier _id
	GETGLOB 11
	STUR 16
	;; tonBalance
	;; push identifier tonBalance
	PUSH S1
	STUR 64
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
;; end if
DROP
; end function _checkTonBalance

.macro initMember
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode id
LDU 16
; Decode console
LDMSGADDR
; Decode eventLog
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode root
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode medium
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode dashboard
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode logLevel
LDUQ 16
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 16
}
IFNOT
ENDS
;; param: id
;; param: console
;; param: eventLog
;; param: root
;; param: medium
;; param: dashboard
;; param: logLevel
; function initMember
; expValue
; end expValue
;; push identifier id
PUSH S6
; colValue
SETGLOB 11
; end colValue
;; push identifier console
;; push identifier eventLog
;; push identifier root
;; push identifier medium
;; push identifier dashboard
;; push identifier logLevel
BLKPUSH 6, 5
CALLREF {
	CALL $_setEnv_internal_macro$
}
; end function initMember
BLKDROP 7
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	_setEnv_internal
.type	_setEnv_internal, @function
CALL $_setEnv_internal_macro$

.macro _setEnv_internal_macro
;; param: console
;; param: eventLog
;; param: root
;; param: medium
;; param: dashboard
;; param: logLevel
; function _setEnv
; expValue
; end expValue
;; push identifier console
PUSH S5
; colValue
SETGLOB 12
; end colValue
; expValue
; end expValue
;; push identifier eventLog
PUSH S4
; colValue
SETGLOB 13
; end colValue
; expValue
; end expValue
;; push identifier root
PUSH S3
; colValue
SETGLOB 14
; end colValue
; expValue
; end expValue
;; push identifier medium
PUSH S2
; colValue
SETGLOB 15
; end colValue
; expValue
; end expValue
;; push identifier dashboard
PUSH S1
; colValue
SETGLOB 16
; end colValue
; expValue
; end expValue
;; push identifier logLevel
DUP
; colValue
SETGLOB 17
; end colValue
; expValue
;; fetch _clients
;; push identifier console
PUSH S5
GETGLOB 20
; end expValue
PUSHINT 10
; colValue
NEWC
STU 16
ROTREV
PUSHINT 267
DICTSETB
; end colValue
; expValue
;; fetch _clients
DUP
SETGLOB 20
;; push identifier eventLog
PUSH S5
SWAP
; end expValue
PUSHINT 20
; colValue
NEWC
STU 16
ROTREV
PUSHINT 267
DICTSETB
; end colValue
; expValue
;; fetch _clients
DUP
SETGLOB 20
;; push identifier root
PUSH S4
SWAP
; end expValue
PUSHINT 30
; colValue
NEWC
STU 16
ROTREV
PUSHINT 267
DICTSETB
; end colValue
; expValue
;; fetch _clients
DUP
SETGLOB 20
;; push identifier medium
PUSH S3
SWAP
; end expValue
PUSHINT 40
; colValue
NEWC
STU 16
ROTREV
PUSHINT 267
DICTSETB
; end colValue
; expValue
;; fetch _clients
DUP
SETGLOB 20
;; push identifier dashboard
PUSH S2
SWAP
; end expValue
PUSHINT 50
; colValue
NEWC
STU 16
ROTREV
PUSHINT 267
DICTSETB
SETGLOB 20
; end colValue
; end function _setEnv
BLKDROP 6

.macro updateEnv
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode console
LDMSGADDR
; Decode eventLog
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode root
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode medium
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode dashboard
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode logLevel
LDUQ 16
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 16
}
IFNOT
ENDS
;; param: console
;; param: eventLog
;; param: root
;; param: medium
;; param: dashboard
;; param: logLevel
; function updateEnv
;; push identifier console
;; push identifier eventLog
;; push identifier root
;; push identifier medium
;; push identifier dashboard
;; push identifier logLevel
BLKPUSH 6, 5
CALLREF {
	CALL $_setEnv_internal_macro$
}
; end function updateEnv
BLKDROP 6
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro getEnv
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
CALLREF {
	CALL $getEnv_internal_macro$
}
;; emitting 7 value(s)
PUSH S7
EQINT -1
PUSHCONT {
	PUSH S9
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 97
	STZEROES
	STSLICECONST 1
	NEWC
	STSLICECONST xdff1c3fa
	PUSH S8
	STUR 16
	PUSH S7
	STSLICER
	PUSH S6
	STSLICER
	PUSH S5
	STSLICER
	NEWC
	PUSH S5
	STSLICER
	PUSH S4
	STSLICER
	PUSH S3
	STUR 16
	STBREFR
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
BLKDROP 7
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getEnv_internal
.type	getEnv_internal, @function
CALL $getEnv_internal_macro$

.macro getEnv_internal_macro
;; ret param: id
PUSHINT 0
;; ret param: console
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: eventLog
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: root
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: medium
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: dashboard
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: logLevel
PUSHINT 0
; function getEnv
;; return
;; push identifier _id
GETGLOB 11
;; push identifier _console
GETGLOB 12
;; push identifier _eventLog
GETGLOB 13
;; push identifier _root
GETGLOB 14
;; push identifier _medium
GETGLOB 15
;; push identifier _dashboard
GETGLOB 16
;; push identifier _logLevel
GETGLOB 17
BLKDROP2 7, 7
; end function getEnv

.macro c7_to_c4
GETGLOB 2
NEWC
STU 256
GETGLOB 3
STUR 64
GETGLOB 6
STUR 1
NEWC
GETGLOB 14
GETGLOB 15
GETGLOB 16
GETGLOB 19
GETGLOB 22
GETGLOB 28
GETGLOB 29
GETGLOB 30
GETGLOB 31
REVERSE 10, 0
STSLICE
STSLICE
STSLICE
STU 64
STU 32
STDICT
STDICT
STDICT
SWAP
UNTUPLE 4
REVERSE 4, 0
NEWC
STU 32
STU 8
STU 8
STU 32
STBREFR
NEWC
GETGLOB 23
GETGLOB 24
GETGLOB 25
GETGLOB 26
PUSHINT 32
GETGLOBVAR
REVERSE 6, 0
STU 32
STU 32
STU 32
STU 32
STDICT
GETGLOB 10
GETGLOB 11
GETGLOB 12
GETGLOB 13
GETGLOB 17
GETGLOB 18
GETGLOB 21
GETGLOB 27
PUSHINT 33
GETGLOBVAR
GETGLOB 20
REVERSE 13, 0
STBREF
STBREF
STU 8
STU 16
STSLICE
STSLICE
STU 16
STU 8
STU 32
STU 8
STDICT
STDICT
ENDC
POP C4

.macro c4_to_c7
PUSHROOT
CTOS        ; c4
LDU 256      ; pubkey c4
LDU 64      ; pubkey timestamp c4
LDU 1       ; pubkey [timestamp] constructor_flag memory
LDREFRTOS
LDMSGADDR
LDMSGADDR
LDMSGADDR
LDU 64
LDU 32
LDDICT
LDDICT
LDDICT
LDREFRTOS
NIP
LDU 32
LDU 8
LDU 8
PLDU 32
TUPLE 4
SETGLOB 31
SETGLOB 30
SETGLOB 29
SETGLOB 28
SETGLOB 22
SETGLOB 19
SETGLOB 16
SETGLOB 15
SETGLOB 14
LDREFRTOS
LDU 32
LDU 32
LDU 32
LDU 32
PLDDICT
PUSHINT 32
SETGLOBVAR
SETGLOB 26
SETGLOB 25
SETGLOB 24
SETGLOB 23
LDU 8
LDU 16
LDMSGADDR
LDMSGADDR
LDU 16
LDU 8
LDU 32
LDU 8
LDDICT
PLDDICT
SETGLOB 20
PUSHINT 33
SETGLOBVAR
SETGLOB 27
SETGLOB 21
SETGLOB 18
SETGLOB 17
SETGLOB 13
SETGLOB 12
SETGLOB 11
SETGLOB 10
TRUE
SETGLOB 1   ; pubkey [timestamp] constructor_flag
SETGLOB 6   ; pubkey [timestamp]
SETGLOB 3   ; D
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS        ; c4
DUP        ; c4 c4
SBITS      ; c4 bits
GTINT 1    ; c4 bits>1
PUSHCONT {
	LDU 256      ; pubkey c4
	LDU 64      ; pubkey timestamp c4
	LDU 1       ; pubkey [timestamp] constructor_flag memory
	LDREFRTOS
	LDMSGADDR
	LDMSGADDR
	LDMSGADDR
	LDU 64
	LDU 32
	LDDICT
	LDDICT
	LDDICT
	LDREFRTOS
	NIP
	LDU 32
	LDU 8
	LDU 8
	PLDU 32
	TUPLE 4
	SETGLOB 31
	SETGLOB 30
	SETGLOB 29
	SETGLOB 28
	SETGLOB 22
	SETGLOB 19
	SETGLOB 16
	SETGLOB 15
	SETGLOB 14
	LDREFRTOS
	LDU 32
	LDU 32
	LDU 32
	LDU 32
	PLDDICT
	PUSHINT 32
	SETGLOBVAR
	SETGLOB 26
	SETGLOB 25
	SETGLOB 24
	SETGLOB 23
	LDU 8
	LDU 16
	LDMSGADDR
	LDMSGADDR
	LDU 16
	LDU 8
	LDU 32
	LDU 8
	LDDICT
	PLDDICT
	SETGLOB 20
	PUSHINT 33
	SETGLOBVAR
	SETGLOB 27
	SETGLOB 21
	SETGLOB 18
	SETGLOB 17
	SETGLOB 13
	SETGLOB 12
	SETGLOB 11
	SETGLOB 10
	TRUE
	SETGLOB 1   ; pubkey [timestamp] constructor_flag
	SETGLOB 6   ; pubkey [timestamp]
	SETGLOB 3   ; D
	SETGLOB 2
}
PUSHCONT {
	PLDDICT   ; D
	; init _version
	PUSHINT 0
	SETGLOB 10
	; init _id
	PUSHINT 0
	SETGLOB 11
	; init _console
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 12
	; init _eventLog
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 13
	; init _root
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 14
	; init _medium
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 15
	; init _dashboard
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 16
	; init _logLevel
	PUSHINT 0
	SETGLOB 17
	; init _transferFee
	PUSHINT 0
	SETGLOB 18
	; init _warnBalance
	PUSHINT 0
	SETGLOB 19
	; init _clients
	NEWDICT
	SETGLOB 20
	; init _transferCount
	PUSHINT 0
	SETGLOB 21
	; init _walletCount
	PUSHINT 0
	SETGLOB 22
	; init _totalSupply
	PUSHINT 0
	SETGLOB 23
	; init _accruedFee
	PUSHINT 0
	SETGLOB 24
	; init _totalFeeClaimed
	PUSHINT 0
	SETGLOB 25
	; init _eventCount
	PUSHINT 0
	SETGLOB 26
	; init _ownerCount
	PUSHINT 0
	SETGLOB 27
	; init _onApproval
	NEWDICT
	SETGLOB 28
	; init _archived
	NEWDICT
	SETGLOB 29
	; init _proposals
	NEWDICT
	SETGLOB 30
	; init _currentEvent
	PUSHINT 0
	BLKPUSH 3, 0
	TUPLE 4
	SETGLOB 31
	; init _ledger
	NEWDICT
	PUSHINT 32
	SETGLOBVAR
	; init _owners
	NEWDICT
	PUSHINT 33
	SETGLOBVAR
	; set contract pubkey
	PUSHINT 0
	SWAP
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
	PUSHINT 0 ; constructor_flag
	SETGLOB 6
	TRUE
	SETGLOB 1
	;; init state var: _version
	PUSHINT 30
	SETGLOB 10
	;; init state var: _transferFee
	PUSHINT 1
	SETGLOB 18
	;; init state var: _warnBalance
	PUSHINT 1990000000
	SETGLOB 19
}
IFELSE

.internal-alias :main_internal, 0
.internal :main_internal
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Function: main_internal
;; param: contract_balance
;; param: msg_balance
;; param: int_msg_info
;; param: msg_body_slice
;; param: transaction_type
PUSH S2
CTOS
LDU 4       ; bounced tail
LDMSGADDR   ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
IFRET
PUSH S1    ; body
SEMPTY     ; isEmpty
IFRET
PUSH S1 ; body
LDU 32  ; funcId body'
PUSH S1 ; funcId body' funcId
IFNOTRET
SWAP
CALLREF {
	CALL $public_function_selector$
}
GETGLOB 7
ISNULL
THROWIF 60

.internal-alias :main_external, -1
.internal :main_external
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 9
PUSH S1
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHINT 512
	LDSLICEX ; signatureSlice msgSlice
	DUP      ; signatureSlice msgSlice msgSlice
	HASHSU   ; signatureSlice msgSlice hashMsgSlice
	ROT
	GETGLOB 2
	CHKSIGNU      ; msgSlice isSigned
	THROWIFNOT 40 ; msgSlice
}
IF
LDU 64                         ; timestamp msgSlice
SWAP                           ; msgSlice timestamp
CALL $replay_protection_macro$ ; msgSlice
LDU  32 ; funcId body
SWAP    ; body funcId
CALLREF {
	CALL $public_function_selector$
}
GETGLOB 7
ISNULL
THROWIF 60

.macro _clients
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 20
PUSHSLICE xc0000000000000000000000000dccdc55c
NEWC
STSLICE
PUSH S1
SWAP
STDICT
ENDC
PUSHINT 0
SENDRAWMSG
TRUE
SETGLOB 7

.macro _onApproval
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 28
PUSHSLICE xc000000000000000000000000090143015
NEWC
STSLICE
PUSH S1
SWAP
STDICT
ENDC
PUSHINT 0
SENDRAWMSG
TRUE
SETGLOB 7

.macro _archived
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 29
PUSHSLICE xc0000000000000000000000000cfa7dc4e
NEWC
STSLICE
PUSH S1
SWAP
STDICT
ENDC
PUSHINT 0
SENDRAWMSG
TRUE
SETGLOB 7

.macro _proposals
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 30
PUSHSLICE xc0000000000000000000000000e3369b74
NEWC
STSLICE
PUSH S1
SWAP
STDICT
ENDC
PUSHINT 0
SENDRAWMSG
TRUE
SETGLOB 7

.macro _currentEvent
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 31
PUSHSLICE xc0000000000000000000000000a7b39ed6
NEWC
STSLICE
PUSH S1
UNTUPLE 4
BLKSWAP 1, 4
PUSH S4
STUR 32
PUSH S3
STUR 8
PUSH S2
STUR 8
PUSH S1
STUR 32
BLKDROP2 4, 1
ENDC
PUSHINT 0
SENDRAWMSG
TRUE
SETGLOB 7

.macro _ledger
CALLREF {
	CALL $c4_to_c7$
}
PUSHINT 32
GETGLOBVAR
PUSHSLICE xc0000000000000000000000000ee284f6e
NEWC
STSLICE
PUSH S1
SWAP
STDICT
ENDC
PUSHINT 0
SENDRAWMSG
TRUE
SETGLOB 7

.macro _owners
CALLREF {
	CALL $c4_to_c7$
}
PUSHINT 33
GETGLOBVAR
PUSHSLICE xc0000000000000000000000000ae58c32d
NEWC
STSLICE
PUSH S1
SWAP
STDICT
ENDC
PUSHINT 0
SENDRAWMSG
TRUE
SETGLOB 7

.macro public_function_selector
DUP
PUSHINT 755322272
LEQ
PUSHCONT {
	DUP
	PUSHINT 269758485
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 247134053
		EQUAL
		IFJMPREF {
			CALL $withdraw$
		}
		DUP
		PUSHINT 269758485
		EQUAL
		IFJMPREF {
			CALL $_onApproval$
		}
	}
	IFJMP
	DUP
	PUSHINT 475063387
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 466758565
		EQUAL
		IFJMPREF {
			CALL $approve$
		}
		DUP
		PUSHINT 475063387
		EQUAL
		IFJMPREF {
			CALL $claimTransferFee$
		}
	}
	IFJMP
	DUP
	PUSHINT 656105679
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 505138389
		EQUAL
		IFJMPREF {
			CALL $commit$
		}
		DUP
		PUSHINT 656105679
		EQUAL
		IFJMPREF {
			CALL $updateEnv$
		}
	}
	IFJMP
	DUP
	PUSHINT 755322272
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 666083030
		EQUAL
		IFJMPREF {
			CALL $_currentEvent$
		}
		DUP
		PUSHINT 755322272
		EQUAL
		IFJMPREF {
			CALL $mint$
		}
	}
	IFJMP
}
IFJMP
DUP
PUSHINT 1293326569
LEQ
PUSHCONT {
	DUP
	PUSHINT 975390000
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 777569069
		EQUAL
		IFJMPREF {
			CALL $_owners$
		}
		DUP
		PUSHINT 975390000
		EQUAL
		IFJMPREF {
			CALL $getStats$
		}
	}
	IFJMP
	DUP
	PUSHINT 1166138746
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 1022133265
		EQUAL
		IFJMPREF {
			CALL $registerTokenWallet$
		}
		DUP
		PUSHINT 1166138746
		EQUAL
		IFJMPREF {
			CALL $burn$
		}
	}
	IFJMP
	DUP
	PUSHINT 1200226358
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 1175553554
		EQUAL
		IFJMPREF {
			CALL $accrue$
		}
		DUP
		PUSHINT 1200226358
		EQUAL
		IFJMPREF {
			CALL $propose$
		}
	}
	IFJMP
	DUP
	PUSHINT 1293326569
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 1268541261
		EQUAL
		IFJMPREF {
			CALL $updateTransferFee$
		}
		DUP
		PUSHINT 1293326569
		EQUAL
		IFJMPREF {
			CALL $creditOwner$
		}
	}
	IFJMP
}
IFJMP
DUP
PUSHINT 1664523124
LEQ
PUSHCONT {
	DUP
	PUSHINT 1396722463
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 1336400974
		EQUAL
		IFJMPREF {
			CALL $_archived$
		}
		DUP
		PUSHINT 1396722463
		EQUAL
		IFJMPREF {
			CALL $registerOwner$
		}
	}
	IFJMP
	DUP
	PUSHINT 1491761443
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 1462714546
		EQUAL
		IFJMPREF {
			CALL $reject$
		}
		DUP
		PUSHINT 1491761443
		EQUAL
		IFJMPREF {
			CALL $requestTransfer$
		}
	}
	IFJMP
	DUP
	PUSHINT 1556989276
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 1537931407
		EQUAL
		IFJMPREF {
			CALL $notifyOwners$
		}
		DUP
		PUSHINT 1556989276
		EQUAL
		IFJMPREF {
			CALL $_clients$
		}
	}
	IFJMP
	DUP
	PUSHINT 1664523124
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 1609679866
		EQUAL
		IFJMPREF {
			CALL $getEnv$
		}
		DUP
		PUSHINT 1664523124
		EQUAL
		IFJMPREF {
			CALL $_proposals$
		}
	}
	IFJMP
}
IFJMP
DUP
PUSHINT 2024728029
LEQ
PUSHCONT {
	DUP
	PUSHINT 1848135534
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 1756716863
		EQUAL
		IFJMPREF {
			CALL $constructor$
		}
		DUP
		PUSHINT 1848135534
		EQUAL
		IFJMPREF {
			CALL $_ledger$
		}
	}
	IFJMP
	DUP
	PUSHINT 1957198208
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 1908908817
		EQUAL
		IFJMPREF {
			CALL $supplyImproved$
		}
		DUP
		PUSHINT 1957198208
		EQUAL
		IFJMPREF {
			CALL $processTransfer$
		}
	}
	IFJMP
	DUP
	PUSHINT 2024728029
	EQUAL
	IFJMPREF {
		CALL $initMember$
	}
}
IFJMP
